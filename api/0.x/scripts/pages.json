[{"name":"abstract fun start(screen: AndroidScreen): Boolean","description":"com.slack.circuitx.android.AndroidScreenStarter.start","location":"circuitx/android/com.slack.circuitx.android/-android-screen-starter/start.html","searchKeys":["start","abstract fun start(screen: AndroidScreen): Boolean","com.slack.circuitx.android.AndroidScreenStarter.start"]},{"name":"constructor(intent: Intent, options: Bundle? = null)","description":"com.slack.circuitx.android.IntentScreen.IntentScreen","location":"circuitx/android/com.slack.circuitx.android/-intent-screen/-intent-screen.html","searchKeys":["IntentScreen","constructor(intent: Intent, options: Bundle? = null)","com.slack.circuitx.android.IntentScreen.IntentScreen"]},{"name":"data class IntentScreen(val intent: Intent, val options: Bundle? = null) : AndroidScreen","description":"com.slack.circuitx.android.IntentScreen","location":"circuitx/android/com.slack.circuitx.android/-intent-screen/index.html","searchKeys":["IntentScreen","data class IntentScreen(val intent: Intent, val options: Bundle? = null) : AndroidScreen","com.slack.circuitx.android.IntentScreen"]},{"name":"fun interface AndroidScreenStarter","description":"com.slack.circuitx.android.AndroidScreenStarter","location":"circuitx/android/com.slack.circuitx.android/-android-screen-starter/index.html","searchKeys":["AndroidScreenStarter","fun interface AndroidScreenStarter","com.slack.circuitx.android.AndroidScreenStarter"]},{"name":"fun rememberAndroidScreenAwareNavigator(delegate: Navigator, context: Context): Navigator","description":"com.slack.circuitx.android.rememberAndroidScreenAwareNavigator","location":"circuitx/android/com.slack.circuitx.android/remember-android-screen-aware-navigator.html","searchKeys":["rememberAndroidScreenAwareNavigator","fun rememberAndroidScreenAwareNavigator(delegate: Navigator, context: Context): Navigator","com.slack.circuitx.android.rememberAndroidScreenAwareNavigator"]},{"name":"fun rememberAndroidScreenAwareNavigator(delegate: Navigator, starter: AndroidScreenStarter): Navigator","description":"com.slack.circuitx.android.rememberAndroidScreenAwareNavigator","location":"circuitx/android/com.slack.circuitx.android/remember-android-screen-aware-navigator.html","searchKeys":["rememberAndroidScreenAwareNavigator","fun rememberAndroidScreenAwareNavigator(delegate: Navigator, starter: AndroidScreenStarter): Navigator","com.slack.circuitx.android.rememberAndroidScreenAwareNavigator"]},{"name":"fun startWith(context: Context): Boolean","description":"com.slack.circuitx.android.IntentScreen.startWith","location":"circuitx/android/com.slack.circuitx.android/-intent-screen/start-with.html","searchKeys":["startWith","fun startWith(context: Context): Boolean","com.slack.circuitx.android.IntentScreen.startWith"]},{"name":"interface AndroidScreen : Screen","description":"com.slack.circuitx.android.AndroidScreen","location":"circuitx/android/com.slack.circuitx.android/-android-screen/index.html","searchKeys":["AndroidScreen","interface AndroidScreen : Screen","com.slack.circuitx.android.AndroidScreen"]},{"name":"val intent: Intent","description":"com.slack.circuitx.android.IntentScreen.intent","location":"circuitx/android/com.slack.circuitx.android/-intent-screen/intent.html","searchKeys":["intent","val intent: Intent","com.slack.circuitx.android.IntentScreen.intent"]},{"name":"val options: Bundle? = null","description":"com.slack.circuitx.android.IntentScreen.options","location":"circuitx/android/com.slack.circuitx.android/-intent-screen/options.html","searchKeys":["options","val options: Bundle? = null","com.slack.circuitx.android.IntentScreen.options"]},{"name":"class CircuitSymbolProcessorProvider : SymbolProcessorProvider","description":"com.slack.circuit.codegen.CircuitSymbolProcessorProvider","location":"circuit-codegen/com.slack.circuit.codegen/-circuit-symbol-processor-provider/index.html","searchKeys":["CircuitSymbolProcessorProvider","class CircuitSymbolProcessorProvider : SymbolProcessorProvider","com.slack.circuit.codegen.CircuitSymbolProcessorProvider"]},{"name":"constructor()","description":"com.slack.circuit.codegen.CircuitSymbolProcessorProvider.CircuitSymbolProcessorProvider","location":"circuit-codegen/com.slack.circuit.codegen/-circuit-symbol-processor-provider/-circuit-symbol-processor-provider.html","searchKeys":["CircuitSymbolProcessorProvider","constructor()","com.slack.circuit.codegen.CircuitSymbolProcessorProvider.CircuitSymbolProcessorProvider"]},{"name":"open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","description":"com.slack.circuit.codegen.CircuitSymbolProcessorProvider.create","location":"circuit-codegen/com.slack.circuit.codegen/-circuit-symbol-processor-provider/create.html","searchKeys":["create","open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","com.slack.circuit.codegen.CircuitSymbolProcessorProvider.create"]},{"name":"HIDDEN","description":"com.slack.circuit.overlay.OverlayState.HIDDEN","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-state/-h-i-d-d-e-n/index.html","searchKeys":["HIDDEN","HIDDEN","com.slack.circuit.overlay.OverlayState.HIDDEN"]},{"name":"SHOWING","description":"com.slack.circuit.overlay.OverlayState.SHOWING","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-state/-s-h-o-w-i-n-g/index.html","searchKeys":["SHOWING","SHOWING","com.slack.circuit.overlay.OverlayState.SHOWING"]},{"name":"UNAVAILABLE","description":"com.slack.circuit.overlay.OverlayState.UNAVAILABLE","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-state/-u-n-a-v-a-i-l-a-b-l-e/index.html","searchKeys":["UNAVAILABLE","UNAVAILABLE","com.slack.circuit.overlay.OverlayState.UNAVAILABLE"]},{"name":"abstract class AnimatedOverlay<Result : Any>(val enterTransition: EnterTransition, val exitTransition: ExitTransition) : Overlay<Result> ","description":"com.slack.circuit.overlay.AnimatedOverlay","location":"circuit-overlay/com.slack.circuit.overlay/-animated-overlay/index.html","searchKeys":["AnimatedOverlay","abstract class AnimatedOverlay<Result : Any>(val enterTransition: EnterTransition, val exitTransition: ExitTransition) : Overlay<Result> ","com.slack.circuit.overlay.AnimatedOverlay"]},{"name":"abstract fun AnimatedVisibilityScope.AnimatedContent(navigator: OverlayNavigator<Result>)","description":"com.slack.circuit.overlay.AnimatedOverlay.AnimatedContent","location":"circuit-overlay/com.slack.circuit.overlay/-animated-overlay/-animated-content.html","searchKeys":["AnimatedContent","abstract fun AnimatedVisibilityScope.AnimatedContent(navigator: OverlayNavigator<Result>)","com.slack.circuit.overlay.AnimatedOverlay.AnimatedContent"]},{"name":"abstract fun Content(navigator: OverlayNavigator<Result>)","description":"com.slack.circuit.overlay.Overlay.Content","location":"circuit-overlay/com.slack.circuit.overlay/-overlay/-content.html","searchKeys":["Content","abstract fun Content(navigator: OverlayNavigator<Result>)","com.slack.circuit.overlay.Overlay.Content"]},{"name":"abstract fun finish(result: Result)","description":"com.slack.circuit.overlay.OverlayHostData.finish","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host-data/finish.html","searchKeys":["finish","abstract fun finish(result: Result)","com.slack.circuit.overlay.OverlayHostData.finish"]},{"name":"abstract fun finish(result: Result)","description":"com.slack.circuit.overlay.OverlayNavigator.finish","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-navigator/finish.html","searchKeys":["finish","abstract fun finish(result: Result)","com.slack.circuit.overlay.OverlayNavigator.finish"]},{"name":"abstract suspend fun <Result : Any> show(overlay: Overlay<Result>): Result","description":"com.slack.circuit.overlay.OverlayHost.show","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host/show.html","searchKeys":["show","abstract suspend fun <Result : Any> show(overlay: Overlay<Result>): Result","com.slack.circuit.overlay.OverlayHost.show"]},{"name":"abstract val currentOverlayData: OverlayHostData<Any>?","description":"com.slack.circuit.overlay.OverlayHost.currentOverlayData","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host/current-overlay-data.html","searchKeys":["currentOverlayData","abstract val currentOverlayData: OverlayHostData<Any>?","com.slack.circuit.overlay.OverlayHost.currentOverlayData"]},{"name":"abstract val overlay: Overlay<Result>","description":"com.slack.circuit.overlay.OverlayHostData.overlay","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host-data/overlay.html","searchKeys":["overlay","abstract val overlay: Overlay<Result>","com.slack.circuit.overlay.OverlayHostData.overlay"]},{"name":"annotation class ReadOnlyOverlayApi","description":"com.slack.circuit.overlay.ReadOnlyOverlayApi","location":"circuit-overlay/com.slack.circuit.overlay/-read-only-overlay-api/index.html","searchKeys":["ReadOnlyOverlayApi","annotation class ReadOnlyOverlayApi","com.slack.circuit.overlay.ReadOnlyOverlayApi"]},{"name":"constructor(enterTransition: EnterTransition, exitTransition: ExitTransition)","description":"com.slack.circuit.overlay.AnimatedOverlay.AnimatedOverlay","location":"circuit-overlay/com.slack.circuit.overlay/-animated-overlay/-animated-overlay.html","searchKeys":["AnimatedOverlay","constructor(enterTransition: EnterTransition, exitTransition: ExitTransition)","com.slack.circuit.overlay.AnimatedOverlay.AnimatedOverlay"]},{"name":"enum OverlayState : Enum<OverlayState> ","description":"com.slack.circuit.overlay.OverlayState","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-state/index.html","searchKeys":["OverlayState","enum OverlayState : Enum<OverlayState> ","com.slack.circuit.overlay.OverlayState"]},{"name":"fun ContentWithOverlays(modifier: Modifier = Modifier, overlayHost: OverlayHost = rememberOverlayHost(), content: () -> Unit)","description":"com.slack.circuit.overlay.ContentWithOverlays","location":"circuit-overlay/com.slack.circuit.overlay/-content-with-overlays.html","searchKeys":["ContentWithOverlays","fun ContentWithOverlays(modifier: Modifier = Modifier, overlayHost: OverlayHost = rememberOverlayHost(), content: () -> Unit)","com.slack.circuit.overlay.ContentWithOverlays"]},{"name":"fun OverlayEffect(vararg keys: Any?, fallback: () -> Unit? = null, block: suspend OverlayScope.() -> Unit)","description":"com.slack.circuit.overlay.OverlayEffect","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-effect.html","searchKeys":["OverlayEffect","fun OverlayEffect(vararg keys: Any?, fallback: () -> Unit? = null, block: suspend OverlayScope.() -> Unit)","com.slack.circuit.overlay.OverlayEffect"]},{"name":"fun interface Overlay<Result : Any>","description":"com.slack.circuit.overlay.Overlay","location":"circuit-overlay/com.slack.circuit.overlay/-overlay/index.html","searchKeys":["Overlay","fun interface Overlay<Result : Any>","com.slack.circuit.overlay.Overlay"]},{"name":"fun interface OverlayNavigator<Result : Any>","description":"com.slack.circuit.overlay.OverlayNavigator","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-navigator/index.html","searchKeys":["OverlayNavigator","fun interface OverlayNavigator<Result : Any>","com.slack.circuit.overlay.OverlayNavigator"]},{"name":"fun rememberOverlayHost(): OverlayHost","description":"com.slack.circuit.overlay.rememberOverlayHost","location":"circuit-overlay/com.slack.circuit.overlay/remember-overlay-host.html","searchKeys":["rememberOverlayHost","fun rememberOverlayHost(): OverlayHost","com.slack.circuit.overlay.rememberOverlayHost"]},{"name":"fun valueOf(value: String): OverlayState","description":"com.slack.circuit.overlay.OverlayState.valueOf","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): OverlayState","com.slack.circuit.overlay.OverlayState.valueOf"]},{"name":"fun values(): Array<OverlayState>","description":"com.slack.circuit.overlay.OverlayState.values","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-state/values.html","searchKeys":["values","fun values(): Array<OverlayState>","com.slack.circuit.overlay.OverlayState.values"]},{"name":"interface OverlayHost","description":"com.slack.circuit.overlay.OverlayHost","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host/index.html","searchKeys":["OverlayHost","interface OverlayHost","com.slack.circuit.overlay.OverlayHost"]},{"name":"interface OverlayHostData<Result : Any>","description":"com.slack.circuit.overlay.OverlayHostData","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-host-data/index.html","searchKeys":["OverlayHostData","interface OverlayHostData<Result : Any>","com.slack.circuit.overlay.OverlayHostData"]},{"name":"interface OverlayScope : OverlayHost, CoroutineScope","description":"com.slack.circuit.overlay.OverlayScope","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-scope/index.html","searchKeys":["OverlayScope","interface OverlayScope : OverlayHost, CoroutineScope","com.slack.circuit.overlay.OverlayScope"]},{"name":"override fun Content(navigator: OverlayNavigator<Result>)","description":"com.slack.circuit.overlay.AnimatedOverlay.Content","location":"circuit-overlay/com.slack.circuit.overlay/-animated-overlay/-content.html","searchKeys":["Content","override fun Content(navigator: OverlayNavigator<Result>)","com.slack.circuit.overlay.AnimatedOverlay.Content"]},{"name":"val LocalOverlayHost: ProvidableCompositionLocal<OverlayHost>","description":"com.slack.circuit.overlay.LocalOverlayHost","location":"circuit-overlay/com.slack.circuit.overlay/-local-overlay-host.html","searchKeys":["LocalOverlayHost","val LocalOverlayHost: ProvidableCompositionLocal<OverlayHost>","com.slack.circuit.overlay.LocalOverlayHost"]},{"name":"val LocalOverlayState: ProvidableCompositionLocal<OverlayState>","description":"com.slack.circuit.overlay.LocalOverlayState","location":"circuit-overlay/com.slack.circuit.overlay/-local-overlay-state.html","searchKeys":["LocalOverlayState","val LocalOverlayState: ProvidableCompositionLocal<OverlayState>","com.slack.circuit.overlay.LocalOverlayState"]},{"name":"val enterTransition: EnterTransition","description":"com.slack.circuit.overlay.AnimatedOverlay.enterTransition","location":"circuit-overlay/com.slack.circuit.overlay/-animated-overlay/enter-transition.html","searchKeys":["enterTransition","val enterTransition: EnterTransition","com.slack.circuit.overlay.AnimatedOverlay.enterTransition"]},{"name":"val entries: EnumEntries<OverlayState>","description":"com.slack.circuit.overlay.OverlayState.entries","location":"circuit-overlay/com.slack.circuit.overlay/-overlay-state/entries.html","searchKeys":["entries","val entries: EnumEntries<OverlayState>","com.slack.circuit.overlay.OverlayState.entries"]},{"name":"val exitTransition: ExitTransition","description":"com.slack.circuit.overlay.AnimatedOverlay.exitTransition","location":"circuit-overlay/com.slack.circuit.overlay/-animated-overlay/exit-transition.html","searchKeys":["exitTransition","val exitTransition: ExitTransition","com.slack.circuit.overlay.AnimatedOverlay.exitTransition"]},{"name":"abstract fun create(screen: Screen, navigator: Navigator, context: CircuitContext): Presenter<*>?","description":"com.slack.circuit.runtime.presenter.Presenter.Factory.create","location":"circuit-runtime-presenter/com.slack.circuit.runtime.presenter/-presenter/-factory/create.html","searchKeys":["create","abstract fun create(screen: Screen, navigator: Navigator, context: CircuitContext): Presenter<*>?","com.slack.circuit.runtime.presenter.Presenter.Factory.create"]},{"name":"abstract fun present(): UiState","description":"com.slack.circuit.runtime.presenter.Presenter.present","location":"circuit-runtime-presenter/com.slack.circuit.runtime.presenter/-presenter/present.html","searchKeys":["present","abstract fun present(): UiState","com.slack.circuit.runtime.presenter.Presenter.present"]},{"name":"fun interface Factory","description":"com.slack.circuit.runtime.presenter.Presenter.Factory","location":"circuit-runtime-presenter/com.slack.circuit.runtime.presenter/-presenter/-factory/index.html","searchKeys":["Factory","fun interface Factory","com.slack.circuit.runtime.presenter.Presenter.Factory"]},{"name":"inline fun <UiState : CircuitUiState> presenterOf(crossinline body: () -> UiState): Presenter<UiState>","description":"com.slack.circuit.runtime.presenter.presenterOf","location":"circuit-runtime-presenter/com.slack.circuit.runtime.presenter/presenter-of.html","searchKeys":["presenterOf","inline fun <UiState : CircuitUiState> presenterOf(crossinline body: () -> UiState): Presenter<UiState>","com.slack.circuit.runtime.presenter.presenterOf"]},{"name":"interface Presenter<UiState : CircuitUiState>","description":"com.slack.circuit.runtime.presenter.Presenter","location":"circuit-runtime-presenter/com.slack.circuit.runtime.presenter/-presenter/index.html","searchKeys":["Presenter","interface Presenter<UiState : CircuitUiState>","com.slack.circuit.runtime.presenter.Presenter"]},{"name":"abstract fun <T> DecoratedContent(args: ImmutableList<T>, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","description":"com.slack.circuit.backstack.NavDecoration.DecoratedContent","location":"backstack/com.slack.circuit.backstack/-nav-decoration/-decorated-content.html","searchKeys":["DecoratedContent","abstract fun <T> DecoratedContent(args: ImmutableList<T>, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","com.slack.circuit.backstack.NavDecoration.DecoratedContent"]},{"name":"abstract fun containsRecord(record: R, includeSaved: Boolean): Boolean","description":"com.slack.circuit.backstack.BackStack.containsRecord","location":"backstack/com.slack.circuit.backstack/-back-stack/contains-record.html","searchKeys":["containsRecord","abstract fun containsRecord(record: R, includeSaved: Boolean): Boolean","com.slack.circuit.backstack.BackStack.containsRecord"]},{"name":"abstract fun pop(result: PopResult? = null): R?","description":"com.slack.circuit.backstack.BackStack.pop","location":"backstack/com.slack.circuit.backstack/-back-stack/pop.html","searchKeys":["pop","abstract fun pop(result: PopResult? = null): R?","com.slack.circuit.backstack.BackStack.pop"]},{"name":"abstract fun provideValues(): ImmutableList<ProvidedValue<*>>","description":"com.slack.circuit.backstack.ProvidedValues.provideValues","location":"backstack/com.slack.circuit.backstack/-provided-values/provide-values.html","searchKeys":["provideValues","abstract fun provideValues(): ImmutableList<ProvidedValue<*>>","com.slack.circuit.backstack.ProvidedValues.provideValues"]},{"name":"abstract fun providedValuesFor(record: R): ProvidedValues","description":"com.slack.circuit.backstack.BackStackRecordLocalProvider.providedValuesFor","location":"backstack/com.slack.circuit.backstack/-back-stack-record-local-provider/provided-values-for.html","searchKeys":["providedValuesFor","abstract fun providedValuesFor(record: R): ProvidedValues","com.slack.circuit.backstack.BackStackRecordLocalProvider.providedValuesFor"]},{"name":"abstract fun push(record: R, resultKey: String? = null): Boolean","description":"com.slack.circuit.backstack.BackStack.push","location":"backstack/com.slack.circuit.backstack/-back-stack/push.html","searchKeys":["push","abstract fun push(record: R, resultKey: String? = null): Boolean","com.slack.circuit.backstack.BackStack.push"]},{"name":"abstract fun push(screen: Screen, resultKey: String? = null): Boolean","description":"com.slack.circuit.backstack.BackStack.push","location":"backstack/com.slack.circuit.backstack/-back-stack/push.html","searchKeys":["push","abstract fun push(screen: Screen, resultKey: String? = null): Boolean","com.slack.circuit.backstack.BackStack.push"]},{"name":"abstract fun restoreState(screen: Screen): Boolean","description":"com.slack.circuit.backstack.BackStack.restoreState","location":"backstack/com.slack.circuit.backstack/-back-stack/restore-state.html","searchKeys":["restoreState","abstract fun restoreState(screen: Screen): Boolean","com.slack.circuit.backstack.BackStack.restoreState"]},{"name":"abstract fun saveState()","description":"com.slack.circuit.backstack.BackStack.saveState","location":"backstack/com.slack.circuit.backstack/-back-stack/save-state.html","searchKeys":["saveState","abstract fun saveState()","com.slack.circuit.backstack.BackStack.saveState"]},{"name":"abstract suspend fun awaitResult(key: String): PopResult?","description":"com.slack.circuit.backstack.BackStack.Record.awaitResult","location":"backstack/com.slack.circuit.backstack/-back-stack/-record/await-result.html","searchKeys":["awaitResult","abstract suspend fun awaitResult(key: String): PopResult?","com.slack.circuit.backstack.BackStack.Record.awaitResult"]},{"name":"abstract val key: String","description":"com.slack.circuit.backstack.BackStack.Record.key","location":"backstack/com.slack.circuit.backstack/-back-stack/-record/key.html","searchKeys":["key","abstract val key: String","com.slack.circuit.backstack.BackStack.Record.key"]},{"name":"abstract val screen: Screen","description":"com.slack.circuit.backstack.BackStack.Record.screen","location":"backstack/com.slack.circuit.backstack/-back-stack/-record/screen.html","searchKeys":["screen","abstract val screen: Screen","com.slack.circuit.backstack.BackStack.Record.screen"]},{"name":"abstract val size: Int","description":"com.slack.circuit.backstack.BackStack.size","location":"backstack/com.slack.circuit.backstack/-back-stack/size.html","searchKeys":["size","abstract val size: Int","com.slack.circuit.backstack.BackStack.size"]},{"name":"abstract val topRecord: R?","description":"com.slack.circuit.backstack.BackStack.topRecord","location":"backstack/com.slack.circuit.backstack/-back-stack/top-record.html","searchKeys":["topRecord","abstract val topRecord: R?","com.slack.circuit.backstack.BackStack.topRecord"]},{"name":"class SaveableBackStack : BackStack<SaveableBackStack.Record> ","description":"com.slack.circuit.backstack.SaveableBackStack","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/index.html","searchKeys":["SaveableBackStack","class SaveableBackStack : BackStack<SaveableBackStack.Record> ","com.slack.circuit.backstack.SaveableBackStack"]},{"name":"constructor(initialRecord: SaveableBackStack.Record)","description":"com.slack.circuit.backstack.SaveableBackStack.SaveableBackStack","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-saveable-back-stack.html","searchKeys":["SaveableBackStack","constructor(initialRecord: SaveableBackStack.Record)","com.slack.circuit.backstack.SaveableBackStack.SaveableBackStack"]},{"name":"constructor(root: Screen)","description":"com.slack.circuit.backstack.SaveableBackStack.SaveableBackStack","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-saveable-back-stack.html","searchKeys":["SaveableBackStack","constructor(root: Screen)","com.slack.circuit.backstack.SaveableBackStack.SaveableBackStack"]},{"name":"constructor(screen: Screen, args: Map<String, Any?> = emptyMap(), key: String = Uuid.random().toString())","description":"com.slack.circuit.backstack.SaveableBackStack.Record.Record","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/-record.html","searchKeys":["Record","constructor(screen: Screen, args: Map<String, Any?> = emptyMap(), key: String = Uuid.random().toString())","com.slack.circuit.backstack.SaveableBackStack.Record.Record"]},{"name":"data class Record(val screen: Screen, val args: Map<String, Any?> = emptyMap(), val key: String = Uuid.random().toString()) : BackStack.Record","description":"com.slack.circuit.backstack.SaveableBackStack.Record","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/index.html","searchKeys":["Record","data class Record(val screen: Screen, val args: Map<String, Any?> = emptyMap(), val key: String = Uuid.random().toString()) : BackStack.Record","com.slack.circuit.backstack.SaveableBackStack.Record"]},{"name":"fun <R : BackStack.Record> providedValuesForBackStack(backStack: BackStack<R>, stackLocalProviders: ImmutableList<BackStackRecordLocalProvider<R>> = persistentListOf(), includeDefaults: Boolean = true): ImmutableMap<R, ProvidedValues>","description":"com.slack.circuit.backstack.providedValuesForBackStack","location":"backstack/com.slack.circuit.backstack/provided-values-for-back-stack.html","searchKeys":["providedValuesForBackStack","fun <R : BackStack.Record> providedValuesForBackStack(backStack: BackStack<R>, stackLocalProviders: ImmutableList<BackStackRecordLocalProvider<R>> = persistentListOf(), includeDefaults: Boolean = true): ImmutableMap<R, ProvidedValues>","com.slack.circuit.backstack.providedValuesForBackStack"]},{"name":"fun interface BackStackRecordLocalProvider<in R : BackStack.Record>","description":"com.slack.circuit.backstack.BackStackRecordLocalProvider","location":"backstack/com.slack.circuit.backstack/-back-stack-record-local-provider/index.html","searchKeys":["BackStackRecordLocalProvider","fun interface BackStackRecordLocalProvider<in R : BackStack.Record>","com.slack.circuit.backstack.BackStackRecordLocalProvider"]},{"name":"fun interface ProvidedValues","description":"com.slack.circuit.backstack.ProvidedValues","location":"backstack/com.slack.circuit.backstack/-provided-values/index.html","searchKeys":["ProvidedValues","fun interface ProvidedValues","com.slack.circuit.backstack.ProvidedValues"]},{"name":"fun push(screen: Screen, args: Map<String, Any?>, resultKey: String?): Boolean","description":"com.slack.circuit.backstack.SaveableBackStack.push","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/push.html","searchKeys":["push","fun push(screen: Screen, args: Map<String, Any?>, resultKey: String?): Boolean","com.slack.circuit.backstack.SaveableBackStack.push"]},{"name":"fun rememberSaveableBackStack(initialScreens: List<Screen>): SaveableBackStack","description":"com.slack.circuit.backstack.rememberSaveableBackStack","location":"backstack/com.slack.circuit.backstack/remember-saveable-back-stack.html","searchKeys":["rememberSaveableBackStack","fun rememberSaveableBackStack(initialScreens: List<Screen>): SaveableBackStack","com.slack.circuit.backstack.rememberSaveableBackStack"]},{"name":"fun rememberSaveableBackStack(root: Screen, init: SaveableBackStack.() -> Unit = {}): SaveableBackStack","description":"com.slack.circuit.backstack.rememberSaveableBackStack","location":"backstack/com.slack.circuit.backstack/remember-saveable-back-stack.html","searchKeys":["rememberSaveableBackStack","fun rememberSaveableBackStack(root: Screen, init: SaveableBackStack.() -> Unit = {}): SaveableBackStack","com.slack.circuit.backstack.rememberSaveableBackStack"]},{"name":"interface BackStack<R : BackStack.Record> : Iterable<R> ","description":"com.slack.circuit.backstack.BackStack","location":"backstack/com.slack.circuit.backstack/-back-stack/index.html","searchKeys":["BackStack","interface BackStack<R : BackStack.Record> : Iterable<R> ","com.slack.circuit.backstack.BackStack"]},{"name":"interface NavDecoration","description":"com.slack.circuit.backstack.NavDecoration","location":"backstack/com.slack.circuit.backstack/-nav-decoration/index.html","searchKeys":["NavDecoration","interface NavDecoration","com.slack.circuit.backstack.NavDecoration"]},{"name":"interface Record","description":"com.slack.circuit.backstack.BackStack.Record","location":"backstack/com.slack.circuit.backstack/-back-stack/-record/index.html","searchKeys":["Record","interface Record","com.slack.circuit.backstack.BackStack.Record"]},{"name":"open fun popUntil(predicate: (R) -> Boolean): ImmutableList<R>","description":"com.slack.circuit.backstack.BackStack.popUntil","location":"backstack/com.slack.circuit.backstack/-back-stack/pop-until.html","searchKeys":["popUntil","open fun popUntil(predicate: (R) -> Boolean): ImmutableList<R>","com.slack.circuit.backstack.BackStack.popUntil"]},{"name":"open operator override fun iterator(): Iterator<SaveableBackStack.Record>","description":"com.slack.circuit.backstack.SaveableBackStack.iterator","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<SaveableBackStack.Record>","com.slack.circuit.backstack.SaveableBackStack.iterator"]},{"name":"open override fun containsRecord(record: SaveableBackStack.Record, includeSaved: Boolean): Boolean","description":"com.slack.circuit.backstack.SaveableBackStack.containsRecord","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/contains-record.html","searchKeys":["containsRecord","open override fun containsRecord(record: SaveableBackStack.Record, includeSaved: Boolean): Boolean","com.slack.circuit.backstack.SaveableBackStack.containsRecord"]},{"name":"open override fun pop(result: PopResult?): SaveableBackStack.Record?","description":"com.slack.circuit.backstack.SaveableBackStack.pop","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/pop.html","searchKeys":["pop","open override fun pop(result: PopResult?): SaveableBackStack.Record?","com.slack.circuit.backstack.SaveableBackStack.pop"]},{"name":"open override fun push(record: SaveableBackStack.Record, resultKey: String?): Boolean","description":"com.slack.circuit.backstack.SaveableBackStack.push","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/push.html","searchKeys":["push","open override fun push(record: SaveableBackStack.Record, resultKey: String?): Boolean","com.slack.circuit.backstack.SaveableBackStack.push"]},{"name":"open override fun push(screen: Screen, resultKey: String?): Boolean","description":"com.slack.circuit.backstack.SaveableBackStack.push","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/push.html","searchKeys":["push","open override fun push(screen: Screen, resultKey: String?): Boolean","com.slack.circuit.backstack.SaveableBackStack.push"]},{"name":"open override fun restoreState(screen: Screen): Boolean","description":"com.slack.circuit.backstack.SaveableBackStack.restoreState","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/restore-state.html","searchKeys":["restoreState","open override fun restoreState(screen: Screen): Boolean","com.slack.circuit.backstack.SaveableBackStack.restoreState"]},{"name":"open override fun saveState()","description":"com.slack.circuit.backstack.SaveableBackStack.saveState","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/save-state.html","searchKeys":["saveState","open override fun saveState()","com.slack.circuit.backstack.SaveableBackStack.saveState"]},{"name":"open override val key: String","description":"com.slack.circuit.backstack.SaveableBackStack.Record.key","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/key.html","searchKeys":["key","open override val key: String","com.slack.circuit.backstack.SaveableBackStack.Record.key"]},{"name":"open override val screen: Screen","description":"com.slack.circuit.backstack.SaveableBackStack.Record.screen","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/screen.html","searchKeys":["screen","open override val screen: Screen","com.slack.circuit.backstack.SaveableBackStack.Record.screen"]},{"name":"open override val size: Int","description":"com.slack.circuit.backstack.SaveableBackStack.size","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/size.html","searchKeys":["size","open override val size: Int","com.slack.circuit.backstack.SaveableBackStack.size"]},{"name":"open override val topRecord: SaveableBackStack.Record?","description":"com.slack.circuit.backstack.SaveableBackStack.topRecord","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/top-record.html","searchKeys":["topRecord","open override val topRecord: SaveableBackStack.Record?","com.slack.circuit.backstack.SaveableBackStack.topRecord"]},{"name":"open suspend override fun awaitResult(key: String): PopResult?","description":"com.slack.circuit.backstack.SaveableBackStack.Record.awaitResult","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/await-result.html","searchKeys":["awaitResult","open suspend override fun awaitResult(key: String): PopResult?","com.slack.circuit.backstack.SaveableBackStack.Record.awaitResult"]},{"name":"val BackStack<out BackStack.Record>.isAtRoot: Boolean","description":"com.slack.circuit.backstack.isAtRoot","location":"backstack/com.slack.circuit.backstack/is-at-root.html","searchKeys":["isAtRoot","val BackStack<out BackStack.Record>.isAtRoot: Boolean","com.slack.circuit.backstack.isAtRoot"]},{"name":"val BackStack<out BackStack.Record>.isEmpty: Boolean","description":"com.slack.circuit.backstack.isEmpty","location":"backstack/com.slack.circuit.backstack/is-empty.html","searchKeys":["isEmpty","val BackStack<out BackStack.Record>.isEmpty: Boolean","com.slack.circuit.backstack.isEmpty"]},{"name":"val args: Map<String, Any?>","description":"com.slack.circuit.backstack.SaveableBackStack.Record.args","location":"backstack/com.slack.circuit.backstack/-saveable-back-stack/-record/args.html","searchKeys":["args","val args: Map<String, Any?>","com.slack.circuit.backstack.SaveableBackStack.Record.args"]},{"name":"abstract fun Content(state: UiState, modifier: Modifier)","description":"com.slack.circuit.runtime.ui.Ui.Content","location":"circuit-runtime-ui/com.slack.circuit.runtime.ui/-ui/-content.html","searchKeys":["Content","abstract fun Content(state: UiState, modifier: Modifier)","com.slack.circuit.runtime.ui.Ui.Content"]},{"name":"abstract fun create(screen: Screen, context: CircuitContext): Ui<*>?","description":"com.slack.circuit.runtime.ui.Ui.Factory.create","location":"circuit-runtime-ui/com.slack.circuit.runtime.ui/-ui/-factory/create.html","searchKeys":["create","abstract fun create(screen: Screen, context: CircuitContext): Ui<*>?","com.slack.circuit.runtime.ui.Ui.Factory.create"]},{"name":"fun interface Factory","description":"com.slack.circuit.runtime.ui.Ui.Factory","location":"circuit-runtime-ui/com.slack.circuit.runtime.ui/-ui/-factory/index.html","searchKeys":["Factory","fun interface Factory","com.slack.circuit.runtime.ui.Ui.Factory"]},{"name":"inline fun <UiState : CircuitUiState> ui(crossinline body: (state: UiState, modifier: Modifier) -> Unit): Ui<UiState>","description":"com.slack.circuit.runtime.ui.ui","location":"circuit-runtime-ui/com.slack.circuit.runtime.ui/ui.html","searchKeys":["ui","inline fun <UiState : CircuitUiState> ui(crossinline body: (state: UiState, modifier: Modifier) -> Unit): Ui<UiState>","com.slack.circuit.runtime.ui.ui"]},{"name":"interface Ui<UiState : CircuitUiState>","description":"com.slack.circuit.runtime.ui.Ui","location":"circuit-runtime-ui/com.slack.circuit.runtime.ui/-ui/index.html","searchKeys":["Ui","interface Ui<UiState : CircuitUiState>","com.slack.circuit.runtime.ui.Ui"]},{"name":"abstract fun canRetain(registry: RetainedStateRegistry): Boolean","description":"com.slack.circuit.retained.CanRetainChecker.canRetain","location":"circuit-retained/com.slack.circuit.retained/-can-retain-checker/can-retain.html","searchKeys":["canRetain","abstract fun canRetain(registry: RetainedStateRegistry): Boolean","com.slack.circuit.retained.CanRetainChecker.canRetain"]},{"name":"abstract fun consumeValue(key: String): Any?","description":"com.slack.circuit.retained.RetainedStateRegistry.consumeValue","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/consume-value.html","searchKeys":["consumeValue","abstract fun consumeValue(key: String): Any?","com.slack.circuit.retained.RetainedStateRegistry.consumeValue"]},{"name":"abstract fun forgetUnclaimedValues()","description":"com.slack.circuit.retained.RetainedStateRegistry.forgetUnclaimedValues","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/forget-unclaimed-values.html","searchKeys":["forgetUnclaimedValues","abstract fun forgetUnclaimedValues()","com.slack.circuit.retained.RetainedStateRegistry.forgetUnclaimedValues"]},{"name":"abstract fun registerValue(key: String, valueProvider: RetainedValueProvider): RetainedStateRegistry.Entry","description":"com.slack.circuit.retained.RetainedStateRegistry.registerValue","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/register-value.html","searchKeys":["registerValue","abstract fun registerValue(key: String, valueProvider: RetainedValueProvider): RetainedStateRegistry.Entry","com.slack.circuit.retained.RetainedStateRegistry.registerValue"]},{"name":"abstract fun saveAll()","description":"com.slack.circuit.retained.RetainedStateRegistry.saveAll","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/save-all.html","searchKeys":["saveAll","abstract fun saveAll()","com.slack.circuit.retained.RetainedStateRegistry.saveAll"]},{"name":"abstract fun saveValue(key: String)","description":"com.slack.circuit.retained.RetainedStateRegistry.saveValue","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/save-value.html","searchKeys":["saveValue","abstract fun saveValue(key: String)","com.slack.circuit.retained.RetainedStateRegistry.saveValue"]},{"name":"abstract fun unregister()","description":"com.slack.circuit.retained.RetainedStateRegistry.Entry.unregister","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/-entry/unregister.html","searchKeys":["unregister","abstract fun unregister()","com.slack.circuit.retained.RetainedStateRegistry.Entry.unregister"]},{"name":"abstract val value: T","description":"com.slack.circuit.retained.RetainedValueHolder.value","location":"circuit-retained/com.slack.circuit.retained/-retained-value-holder/value.html","searchKeys":["value","abstract val value: T","com.slack.circuit.retained.RetainedValueHolder.value"]},{"name":"annotation class DelicateCircuitRetainedApi","description":"com.slack.circuit.retained.DelicateCircuitRetainedApi","location":"circuit-retained/com.slack.circuit.retained/-delicate-circuit-retained-api/index.html","searchKeys":["DelicateCircuitRetainedApi","annotation class DelicateCircuitRetainedApi","com.slack.circuit.retained.DelicateCircuitRetainedApi"]},{"name":"const val KEY: String","description":"com.slack.circuit.retained.Continuity.KEY","location":"circuit-retained/com.slack.circuit.retained/-continuity/-k-e-y.html","searchKeys":["KEY","const val KEY: String","com.slack.circuit.retained.Continuity.KEY"]},{"name":"expect abstract fun invoke(): Any?","description":"com.slack.circuit.retained.RetainedValueProvider.invoke","location":"circuit-retained/com.slack.circuit.retained/-retained-value-provider/invoke.html","searchKeys":["invoke","expect abstract fun invoke(): Any?","com.slack.circuit.retained.RetainedValueProvider.invoke"]},{"name":"expect fun continuityRetainedStateRegistry(key: String = Continuity.KEY, canRetainChecker: CanRetainChecker = LocalCanRetainChecker.current ?: rememberCanRetainChecker()): RetainedStateRegistry","description":"com.slack.circuit.retained.continuityRetainedStateRegistry","location":"circuit-retained/com.slack.circuit.retained/continuity-retained-state-registry.html","searchKeys":["continuityRetainedStateRegistry","expect fun continuityRetainedStateRegistry(key: String = Continuity.KEY, canRetainChecker: CanRetainChecker = LocalCanRetainChecker.current ?: rememberCanRetainChecker()): RetainedStateRegistry","com.slack.circuit.retained.continuityRetainedStateRegistry"]},{"name":"expect fun interface RetainedValueProvider","description":"com.slack.circuit.retained.RetainedValueProvider","location":"circuit-retained/com.slack.circuit.retained/-retained-value-provider/index.html","searchKeys":["RetainedValueProvider","expect fun interface RetainedValueProvider","com.slack.circuit.retained.RetainedValueProvider"]},{"name":"expect fun rememberCanRetainChecker(): CanRetainChecker","description":"com.slack.circuit.retained.rememberCanRetainChecker","location":"circuit-retained/com.slack.circuit.retained/remember-can-retain-checker.html","searchKeys":["rememberCanRetainChecker","expect fun rememberCanRetainChecker(): CanRetainChecker","com.slack.circuit.retained.rememberCanRetainChecker"]},{"name":"fun <T : Any> rememberRetained(vararg inputs: Any?, key: String? = null, init: () -> T): T","description":"com.slack.circuit.retained.rememberRetained","location":"circuit-retained/com.slack.circuit.retained/remember-retained.html","searchKeys":["rememberRetained","fun <T : Any> rememberRetained(vararg inputs: Any?, key: String? = null, init: () -> T): T","com.slack.circuit.retained.rememberRetained"]},{"name":"fun <T : Any> rememberRetained(vararg inputs: Any?, saver: Saver<T, out Any>, key: String? = null, init: () -> T): T","description":"com.slack.circuit.retained.rememberRetained","location":"circuit-retained/com.slack.circuit.retained/remember-retained.html","searchKeys":["rememberRetained","fun <T : Any> rememberRetained(vararg inputs: Any?, saver: Saver<T, out Any>, key: String? = null, init: () -> T): T","com.slack.circuit.retained.rememberRetained"]},{"name":"fun <T : Any> rememberRetainedSaveable(vararg inputs: Any?, saver: Saver<T, out Any> = autoSaver(), key: String? = null, init: () -> T): T","description":"com.slack.circuit.retained.rememberRetainedSaveable","location":"circuit-retained/com.slack.circuit.retained/remember-retained-saveable.html","searchKeys":["rememberRetainedSaveable","fun <T : Any> rememberRetainedSaveable(vararg inputs: Any?, saver: Saver<T, out Any> = autoSaver(), key: String? = null, init: () -> T): T","com.slack.circuit.retained.rememberRetainedSaveable"]},{"name":"fun <T : R, R> Flow<T>.collectAsRetainedState(initial: R, context: CoroutineContext = EmptyCoroutineContext): State<R>","description":"com.slack.circuit.retained.collectAsRetainedState","location":"circuit-retained/com.slack.circuit.retained/collect-as-retained-state.html","searchKeys":["collectAsRetainedState","fun <T : R, R> Flow<T>.collectAsRetainedState(initial: R, context: CoroutineContext = EmptyCoroutineContext): State<R>","com.slack.circuit.retained.collectAsRetainedState"]},{"name":"fun <T> StateFlow<T>.collectAsRetainedState(context: CoroutineContext = EmptyCoroutineContext): State<T>","description":"com.slack.circuit.retained.collectAsRetainedState","location":"circuit-retained/com.slack.circuit.retained/collect-as-retained-state.html","searchKeys":["collectAsRetainedState","fun <T> StateFlow<T>.collectAsRetainedState(context: CoroutineContext = EmptyCoroutineContext): State<T>","com.slack.circuit.retained.collectAsRetainedState"]},{"name":"fun <T> produceRetainedState(initialValue: T, key1: Any?, key2: Any?, key3: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"com.slack.circuit.retained.produceRetainedState","location":"circuit-retained/com.slack.circuit.retained/produce-retained-state.html","searchKeys":["produceRetainedState","fun <T> produceRetainedState(initialValue: T, key1: Any?, key2: Any?, key3: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","com.slack.circuit.retained.produceRetainedState"]},{"name":"fun <T> produceRetainedState(initialValue: T, key1: Any?, key2: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"com.slack.circuit.retained.produceRetainedState","location":"circuit-retained/com.slack.circuit.retained/produce-retained-state.html","searchKeys":["produceRetainedState","fun <T> produceRetainedState(initialValue: T, key1: Any?, key2: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","com.slack.circuit.retained.produceRetainedState"]},{"name":"fun <T> produceRetainedState(initialValue: T, key1: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"com.slack.circuit.retained.produceRetainedState","location":"circuit-retained/com.slack.circuit.retained/produce-retained-state.html","searchKeys":["produceRetainedState","fun <T> produceRetainedState(initialValue: T, key1: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","com.slack.circuit.retained.produceRetainedState"]},{"name":"fun <T> produceRetainedState(initialValue: T, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"com.slack.circuit.retained.produceRetainedState","location":"circuit-retained/com.slack.circuit.retained/produce-retained-state.html","searchKeys":["produceRetainedState","fun <T> produceRetainedState(initialValue: T, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","com.slack.circuit.retained.produceRetainedState"]},{"name":"fun <T> produceRetainedState(initialValue: T, vararg keys: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","description":"com.slack.circuit.retained.produceRetainedState","location":"circuit-retained/com.slack.circuit.retained/produce-retained-state.html","searchKeys":["produceRetainedState","fun <T> produceRetainedState(initialValue: T, vararg keys: Any?, producer: suspend ProduceStateScope<T>.() -> Unit): State<T>","com.slack.circuit.retained.produceRetainedState"]},{"name":"fun <T> rememberRetained(vararg inputs: Any?, stateSaver: Saver<T, out Any>, key: String? = null, init: () -> MutableState<T>): MutableState<T>","description":"com.slack.circuit.retained.rememberRetained","location":"circuit-retained/com.slack.circuit.retained/remember-retained.html","searchKeys":["rememberRetained","fun <T> rememberRetained(vararg inputs: Any?, stateSaver: Saver<T, out Any>, key: String? = null, init: () -> MutableState<T>): MutableState<T>","com.slack.circuit.retained.rememberRetained"]},{"name":"fun <T> rememberRetainedSaveable(vararg inputs: Any?, stateSaver: Saver<T, out Any>, key: String? = null, init: () -> MutableState<T>): MutableState<T>","description":"com.slack.circuit.retained.rememberRetainedSaveable","location":"circuit-retained/com.slack.circuit.retained/remember-retained-saveable.html","searchKeys":["rememberRetainedSaveable","fun <T> rememberRetainedSaveable(vararg inputs: Any?, stateSaver: Saver<T, out Any>, key: String? = null, init: () -> MutableState<T>): MutableState<T>","com.slack.circuit.retained.rememberRetainedSaveable"]},{"name":"fun RetainedStateRegistry(values: Map<String, List<Any?>> = emptyMap()): RetainedStateRegistry","description":"com.slack.circuit.retained.RetainedStateRegistry","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry.html","searchKeys":["RetainedStateRegistry","fun RetainedStateRegistry(values: Map<String, List<Any?>> = emptyMap()): RetainedStateRegistry","com.slack.circuit.retained.RetainedStateRegistry"]},{"name":"fun continuityRetainedStateRegistry(key: String = Continuity.KEY, factory: ViewModelProvider.Factory = ContinuityViewModel.Factory, canRetainChecker: CanRetainChecker = LocalCanRetainChecker.current ?: rememberCanRetainChecker()): RetainedStateRegistry","description":"com.slack.circuit.retained.continuityRetainedStateRegistry","location":"circuit-retained/com.slack.circuit.retained/continuity-retained-state-registry.html","searchKeys":["continuityRetainedStateRegistry","fun continuityRetainedStateRegistry(key: String = Continuity.KEY, factory: ViewModelProvider.Factory = ContinuityViewModel.Factory, canRetainChecker: CanRetainChecker = LocalCanRetainChecker.current ?: rememberCanRetainChecker()): RetainedStateRegistry","com.slack.circuit.retained.continuityRetainedStateRegistry"]},{"name":"fun interface CanRetainChecker","description":"com.slack.circuit.retained.CanRetainChecker","location":"circuit-retained/com.slack.circuit.retained/-can-retain-checker/index.html","searchKeys":["CanRetainChecker","fun interface CanRetainChecker","com.slack.circuit.retained.CanRetainChecker"]},{"name":"interface Entry","description":"com.slack.circuit.retained.RetainedStateRegistry.Entry","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/-entry/index.html","searchKeys":["Entry","interface Entry","com.slack.circuit.retained.RetainedStateRegistry.Entry"]},{"name":"interface RetainedStateRegistry","description":"com.slack.circuit.retained.RetainedStateRegistry","location":"circuit-retained/com.slack.circuit.retained/-retained-state-registry/index.html","searchKeys":["RetainedStateRegistry","interface RetainedStateRegistry","com.slack.circuit.retained.RetainedStateRegistry"]},{"name":"interface RetainedValueHolder<T>","description":"com.slack.circuit.retained.RetainedValueHolder","location":"circuit-retained/com.slack.circuit.retained/-retained-value-holder/index.html","searchKeys":["RetainedValueHolder","interface RetainedValueHolder<T>","com.slack.circuit.retained.RetainedValueHolder"]},{"name":"object Companion","description":"com.slack.circuit.retained.CanRetainChecker.Companion","location":"circuit-retained/com.slack.circuit.retained/-can-retain-checker/-companion/index.html","searchKeys":["Companion","object Companion","com.slack.circuit.retained.CanRetainChecker.Companion"]},{"name":"object Continuity","description":"com.slack.circuit.retained.Continuity","location":"circuit-retained/com.slack.circuit.retained/-continuity/index.html","searchKeys":["Continuity","object Continuity","com.slack.circuit.retained.Continuity"]},{"name":"object NoOpRetainedStateRegistry : RetainedStateRegistry","description":"com.slack.circuit.retained.NoOpRetainedStateRegistry","location":"circuit-retained/com.slack.circuit.retained/-no-op-retained-state-registry/index.html","searchKeys":["NoOpRetainedStateRegistry","object NoOpRetainedStateRegistry : RetainedStateRegistry","com.slack.circuit.retained.NoOpRetainedStateRegistry"]},{"name":"open override fun consumeValue(key: String): Any?","description":"com.slack.circuit.retained.NoOpRetainedStateRegistry.consumeValue","location":"circuit-retained/com.slack.circuit.retained/-no-op-retained-state-registry/consume-value.html","searchKeys":["consumeValue","open override fun consumeValue(key: String): Any?","com.slack.circuit.retained.NoOpRetainedStateRegistry.consumeValue"]},{"name":"open override fun forgetUnclaimedValues()","description":"com.slack.circuit.retained.NoOpRetainedStateRegistry.forgetUnclaimedValues","location":"circuit-retained/com.slack.circuit.retained/-no-op-retained-state-registry/forget-unclaimed-values.html","searchKeys":["forgetUnclaimedValues","open override fun forgetUnclaimedValues()","com.slack.circuit.retained.NoOpRetainedStateRegistry.forgetUnclaimedValues"]},{"name":"open override fun registerValue(key: String, valueProvider: RetainedValueProvider): RetainedStateRegistry.Entry","description":"com.slack.circuit.retained.NoOpRetainedStateRegistry.registerValue","location":"circuit-retained/com.slack.circuit.retained/-no-op-retained-state-registry/register-value.html","searchKeys":["registerValue","open override fun registerValue(key: String, valueProvider: RetainedValueProvider): RetainedStateRegistry.Entry","com.slack.circuit.retained.NoOpRetainedStateRegistry.registerValue"]},{"name":"open override fun saveAll()","description":"com.slack.circuit.retained.NoOpRetainedStateRegistry.saveAll","location":"circuit-retained/com.slack.circuit.retained/-no-op-retained-state-registry/save-all.html","searchKeys":["saveAll","open override fun saveAll()","com.slack.circuit.retained.NoOpRetainedStateRegistry.saveAll"]},{"name":"open override fun saveValue(key: String)","description":"com.slack.circuit.retained.NoOpRetainedStateRegistry.saveValue","location":"circuit-retained/com.slack.circuit.retained/-no-op-retained-state-registry/save-value.html","searchKeys":["saveValue","open override fun saveValue(key: String)","com.slack.circuit.retained.NoOpRetainedStateRegistry.saveValue"]},{"name":"val Always: CanRetainChecker","description":"com.slack.circuit.retained.CanRetainChecker.Companion.Always","location":"circuit-retained/com.slack.circuit.retained/-can-retain-checker/-companion/-always.html","searchKeys":["Always","val Always: CanRetainChecker","com.slack.circuit.retained.CanRetainChecker.Companion.Always"]},{"name":"val LocalCanRetainChecker: ProvidableCompositionLocal<CanRetainChecker?>","description":"com.slack.circuit.retained.LocalCanRetainChecker","location":"circuit-retained/com.slack.circuit.retained/-local-can-retain-checker.html","searchKeys":["LocalCanRetainChecker","val LocalCanRetainChecker: ProvidableCompositionLocal<CanRetainChecker?>","com.slack.circuit.retained.LocalCanRetainChecker"]},{"name":"val LocalRetainedStateRegistry: ProvidableCompositionLocal<RetainedStateRegistry>","description":"com.slack.circuit.retained.LocalRetainedStateRegistry","location":"circuit-retained/com.slack.circuit.retained/-local-retained-state-registry.html","searchKeys":["LocalRetainedStateRegistry","val LocalRetainedStateRegistry: ProvidableCompositionLocal<RetainedStateRegistry>","com.slack.circuit.retained.LocalRetainedStateRegistry"]},{"name":"abstract suspend fun awaitUnchanged()","description":"com.slack.circuit.test.CircuitReceiveTurbine.awaitUnchanged","location":"circuit-test/com.slack.circuit.test/-circuit-receive-turbine/await-unchanged.html","searchKeys":["awaitUnchanged","abstract suspend fun awaitUnchanged()","com.slack.circuit.test.CircuitReceiveTurbine.awaitUnchanged"]},{"name":"annotation class ExperimentalForInheritanceCircuitTestApi","description":"com.slack.circuit.test.ExperimentalForInheritanceCircuitTestApi","location":"circuit-test/com.slack.circuit.test/-experimental-for-inheritance-circuit-test-api/index.html","searchKeys":["ExperimentalForInheritanceCircuitTestApi","annotation class ExperimentalForInheritanceCircuitTestApi","com.slack.circuit.test.ExperimentalForInheritanceCircuitTestApi"]},{"name":"class FakeNavigator : Navigator","description":"com.slack.circuit.test.FakeNavigator","location":"circuit-test/com.slack.circuit.test/-fake-navigator/index.html","searchKeys":["FakeNavigator","class FakeNavigator : Navigator","com.slack.circuit.test.FakeNavigator"]},{"name":"class TestEventSink<UiEvent : CircuitUiEvent> : BaseTestEventSinkType<UiEvent> ","description":"com.slack.circuit.test.TestEventSink","location":"circuit-test/com.slack.circuit.test/-test-event-sink/index.html","searchKeys":["TestEventSink","class TestEventSink<UiEvent : CircuitUiEvent> : BaseTestEventSinkType<UiEvent> ","com.slack.circuit.test.TestEventSink"]},{"name":"constructor()","description":"com.slack.circuit.test.TestEventSink.TestEventSink","location":"circuit-test/com.slack.circuit.test/-test-event-sink/-test-event-sink.html","searchKeys":["TestEventSink","constructor()","com.slack.circuit.test.TestEventSink.TestEventSink"]},{"name":"constructor(backStack: BackStack<out BackStack.Record>)","description":"com.slack.circuit.test.FakeNavigator.FakeNavigator","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-fake-navigator.html","searchKeys":["FakeNavigator","constructor(backStack: BackStack<out BackStack.Record>)","com.slack.circuit.test.FakeNavigator.FakeNavigator"]},{"name":"constructor(newRoot: Screen, oldScreens: ImmutableList<Screen>, saveState: Boolean = false, restoreState: Boolean = false)","description":"com.slack.circuit.test.FakeNavigator.ResetRootEvent.ResetRootEvent","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-reset-root-event/-reset-root-event.html","searchKeys":["ResetRootEvent","constructor(newRoot: Screen, oldScreens: ImmutableList<Screen>, saveState: Boolean = false, restoreState: Boolean = false)","com.slack.circuit.test.FakeNavigator.ResetRootEvent.ResetRootEvent"]},{"name":"constructor(poppedScreen: Screen?, result: PopResult? = null)","description":"com.slack.circuit.test.FakeNavigator.PopEvent.PopEvent","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-pop-event/-pop-event.html","searchKeys":["PopEvent","constructor(poppedScreen: Screen?, result: PopResult? = null)","com.slack.circuit.test.FakeNavigator.PopEvent.PopEvent"]},{"name":"constructor(root: Screen, vararg additionalScreens: Screen)","description":"com.slack.circuit.test.FakeNavigator.FakeNavigator","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-fake-navigator.html","searchKeys":["FakeNavigator","constructor(root: Screen, vararg additionalScreens: Screen)","com.slack.circuit.test.FakeNavigator.FakeNavigator"]},{"name":"constructor(screen: Screen, success: Boolean)","description":"com.slack.circuit.test.FakeNavigator.GoToEvent.GoToEvent","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-go-to-event/-go-to-event.html","searchKeys":["GoToEvent","constructor(screen: Screen, success: Boolean)","com.slack.circuit.test.FakeNavigator.GoToEvent.GoToEvent"]},{"name":"data class GoToEvent(val screen: Screen, val success: Boolean)","description":"com.slack.circuit.test.FakeNavigator.GoToEvent","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-go-to-event/index.html","searchKeys":["GoToEvent","data class GoToEvent(val screen: Screen, val success: Boolean)","com.slack.circuit.test.FakeNavigator.GoToEvent"]},{"name":"data class PopEvent(val poppedScreen: Screen?, val result: PopResult? = null)","description":"com.slack.circuit.test.FakeNavigator.PopEvent","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-pop-event/index.html","searchKeys":["PopEvent","data class PopEvent(val poppedScreen: Screen?, val result: PopResult? = null)","com.slack.circuit.test.FakeNavigator.PopEvent"]},{"name":"data class ResetRootEvent(val newRoot: Screen, val oldScreens: ImmutableList<Screen>, val saveState: Boolean = false, val restoreState: Boolean = false)","description":"com.slack.circuit.test.FakeNavigator.ResetRootEvent","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-reset-root-event/index.html","searchKeys":["ResetRootEvent","data class ResetRootEvent(val newRoot: Screen, val oldScreens: ImmutableList<Screen>, val saveState: Boolean = false, val restoreState: Boolean = false)","com.slack.circuit.test.FakeNavigator.ResetRootEvent"]},{"name":"expect abstract operator fun invoke(event: UiEvent)","description":"com.slack.circuit.test.BaseTestEventSinkType.invoke","location":"circuit-test/com.slack.circuit.test/-base-test-event-sink-type/invoke.html","searchKeys":["invoke","expect abstract operator fun invoke(event: UiEvent)","com.slack.circuit.test.BaseTestEventSinkType.invoke"]},{"name":"expect sealed interface BaseTestEventSinkType<UiEvent>","description":"com.slack.circuit.test.BaseTestEventSinkType","location":"circuit-test/com.slack.circuit.test/-base-test-event-sink-type/index.html","searchKeys":["BaseTestEventSinkType","expect sealed interface BaseTestEventSinkType<UiEvent>","com.slack.circuit.test.BaseTestEventSinkType"]},{"name":"fun <UiEvent : CircuitUiEvent> TestEventSink<UiEvent>.asEventSinkFunction(): (UiEvent) -> Unit","description":"com.slack.circuit.test.asEventSinkFunction","location":"circuit-test/com.slack.circuit.test/[js]as-event-sink-function.html","searchKeys":["asEventSinkFunction","fun <UiEvent : CircuitUiEvent> TestEventSink<UiEvent>.asEventSinkFunction(): (UiEvent) -> Unit","com.slack.circuit.test.asEventSinkFunction"]},{"name":"fun <UiEvent : CircuitUiEvent> TestEventSink<UiEvent>.asEventSinkFunction(): (UiEvent) -> Unit","description":"com.slack.circuit.test.asEventSinkFunction","location":"circuit-test/com.slack.circuit.test/[wasm-js]as-event-sink-function.html","searchKeys":["asEventSinkFunction","fun <UiEvent : CircuitUiEvent> TestEventSink<UiEvent>.asEventSinkFunction(): (UiEvent) -> Unit","com.slack.circuit.test.asEventSinkFunction"]},{"name":"fun assertEvent(event: UiEvent): TestEventSink<UiEvent>","description":"com.slack.circuit.test.TestEventSink.assertEvent","location":"circuit-test/com.slack.circuit.test/-test-event-sink/assert-event.html","searchKeys":["assertEvent","fun assertEvent(event: UiEvent): TestEventSink<UiEvent>","com.slack.circuit.test.TestEventSink.assertEvent"]},{"name":"fun assertEvent(predicate: (UiEvent) -> Boolean): TestEventSink<UiEvent>","description":"com.slack.circuit.test.TestEventSink.assertEvent","location":"circuit-test/com.slack.circuit.test/-test-event-sink/assert-event.html","searchKeys":["assertEvent","fun assertEvent(predicate: (UiEvent) -> Boolean): TestEventSink<UiEvent>","com.slack.circuit.test.TestEventSink.assertEvent"]},{"name":"fun assertEventAt(index: Int, event: UiEvent): TestEventSink<UiEvent>","description":"com.slack.circuit.test.TestEventSink.assertEventAt","location":"circuit-test/com.slack.circuit.test/-test-event-sink/assert-event-at.html","searchKeys":["assertEventAt","fun assertEventAt(index: Int, event: UiEvent): TestEventSink<UiEvent>","com.slack.circuit.test.TestEventSink.assertEventAt"]},{"name":"fun assertEventAt(index: Int, predicate: (UiEvent) -> Boolean): TestEventSink<UiEvent>","description":"com.slack.circuit.test.TestEventSink.assertEventAt","location":"circuit-test/com.slack.circuit.test/-test-event-sink/assert-event-at.html","searchKeys":["assertEventAt","fun assertEventAt(index: Int, predicate: (UiEvent) -> Boolean): TestEventSink<UiEvent>","com.slack.circuit.test.TestEventSink.assertEventAt"]},{"name":"fun assertEventCount(count: Int): TestEventSink<UiEvent>","description":"com.slack.circuit.test.TestEventSink.assertEventCount","location":"circuit-test/com.slack.circuit.test/-test-event-sink/assert-event-count.html","searchKeys":["assertEventCount","fun assertEventCount(count: Int): TestEventSink<UiEvent>","com.slack.circuit.test.TestEventSink.assertEventCount"]},{"name":"fun assertEvents(predicate: (Int, UiEvent) -> Boolean): TestEventSink<UiEvent>","description":"com.slack.circuit.test.TestEventSink.assertEvents","location":"circuit-test/com.slack.circuit.test/-test-event-sink/assert-events.html","searchKeys":["assertEvents","fun assertEvents(predicate: (Int, UiEvent) -> Boolean): TestEventSink<UiEvent>","com.slack.circuit.test.TestEventSink.assertEvents"]},{"name":"fun assertEvents(vararg events: UiEvent): TestEventSink<UiEvent>","description":"com.slack.circuit.test.TestEventSink.assertEvents","location":"circuit-test/com.slack.circuit.test/-test-event-sink/assert-events.html","searchKeys":["assertEvents","fun assertEvents(vararg events: UiEvent): TestEventSink<UiEvent>","com.slack.circuit.test.TestEventSink.assertEvents"]},{"name":"fun assertGoToIsEmpty()","description":"com.slack.circuit.test.FakeNavigator.assertGoToIsEmpty","location":"circuit-test/com.slack.circuit.test/-fake-navigator/assert-go-to-is-empty.html","searchKeys":["assertGoToIsEmpty","fun assertGoToIsEmpty()","com.slack.circuit.test.FakeNavigator.assertGoToIsEmpty"]},{"name":"fun assertNoEvents(): TestEventSink<UiEvent>","description":"com.slack.circuit.test.TestEventSink.assertNoEvents","location":"circuit-test/com.slack.circuit.test/-test-event-sink/assert-no-events.html","searchKeys":["assertNoEvents","fun assertNoEvents(): TestEventSink<UiEvent>","com.slack.circuit.test.TestEventSink.assertNoEvents"]},{"name":"fun assertPopIsEmpty()","description":"com.slack.circuit.test.FakeNavigator.assertPopIsEmpty","location":"circuit-test/com.slack.circuit.test/-fake-navigator/assert-pop-is-empty.html","searchKeys":["assertPopIsEmpty","fun assertPopIsEmpty()","com.slack.circuit.test.FakeNavigator.assertPopIsEmpty"]},{"name":"fun assertResetRootIsEmpty()","description":"com.slack.circuit.test.FakeNavigator.assertResetRootIsEmpty","location":"circuit-test/com.slack.circuit.test/-fake-navigator/assert-reset-root-is-empty.html","searchKeys":["assertResetRootIsEmpty","fun assertResetRootIsEmpty()","com.slack.circuit.test.FakeNavigator.assertResetRootIsEmpty"]},{"name":"fun expectNoGoToEvents()","description":"com.slack.circuit.test.FakeNavigator.expectNoGoToEvents","location":"circuit-test/com.slack.circuit.test/-fake-navigator/expect-no-go-to-events.html","searchKeys":["expectNoGoToEvents","fun expectNoGoToEvents()","com.slack.circuit.test.FakeNavigator.expectNoGoToEvents"]},{"name":"fun expectNoPopEvents()","description":"com.slack.circuit.test.FakeNavigator.expectNoPopEvents","location":"circuit-test/com.slack.circuit.test/-fake-navigator/expect-no-pop-events.html","searchKeys":["expectNoPopEvents","fun expectNoPopEvents()","com.slack.circuit.test.FakeNavigator.expectNoPopEvents"]},{"name":"fun expectNoResetRootEvents()","description":"com.slack.circuit.test.FakeNavigator.expectNoResetRootEvents","location":"circuit-test/com.slack.circuit.test/-fake-navigator/expect-no-reset-root-events.html","searchKeys":["expectNoResetRootEvents","fun expectNoResetRootEvents()","com.slack.circuit.test.FakeNavigator.expectNoResetRootEvents"]},{"name":"fun takeNextScreen(): Screen","description":"com.slack.circuit.test.FakeNavigator.takeNextScreen","location":"circuit-test/com.slack.circuit.test/-fake-navigator/take-next-screen.html","searchKeys":["takeNextScreen","fun takeNextScreen(): Screen","com.slack.circuit.test.FakeNavigator.takeNextScreen"]},{"name":"interface CircuitReceiveTurbine<UiState : CircuitUiState> : ReceiveTurbine<UiState> ","description":"com.slack.circuit.test.CircuitReceiveTurbine","location":"circuit-test/com.slack.circuit.test/-circuit-receive-turbine/index.html","searchKeys":["CircuitReceiveTurbine","interface CircuitReceiveTurbine<UiState : CircuitUiState> : ReceiveTurbine<UiState> ","com.slack.circuit.test.CircuitReceiveTurbine"]},{"name":"object Companion","description":"com.slack.circuit.test.TestEventSink.Companion","location":"circuit-test/com.slack.circuit.test/-test-event-sink/-companion/index.html","searchKeys":["Companion","object Companion","com.slack.circuit.test.TestEventSink.Companion"]},{"name":"open operator override fun invoke(event: UiEvent)","description":"com.slack.circuit.test.TestEventSink.invoke","location":"circuit-test/com.slack.circuit.test/-test-event-sink/invoke.html","searchKeys":["invoke","open operator override fun invoke(event: UiEvent)","com.slack.circuit.test.TestEventSink.invoke"]},{"name":"open override fun goTo(screen: Screen): Boolean","description":"com.slack.circuit.test.FakeNavigator.goTo","location":"circuit-test/com.slack.circuit.test/-fake-navigator/go-to.html","searchKeys":["goTo","open override fun goTo(screen: Screen): Boolean","com.slack.circuit.test.FakeNavigator.goTo"]},{"name":"open override fun pop(result: PopResult?): Screen?","description":"com.slack.circuit.test.FakeNavigator.pop","location":"circuit-test/com.slack.circuit.test/-fake-navigator/pop.html","searchKeys":["pop","open override fun pop(result: PopResult?): Screen?","com.slack.circuit.test.FakeNavigator.pop"]},{"name":"open override fun resetRoot(newRoot: Screen, saveState: Boolean, restoreState: Boolean): ImmutableList<Screen>","description":"com.slack.circuit.test.FakeNavigator.resetRoot","location":"circuit-test/com.slack.circuit.test/-fake-navigator/reset-root.html","searchKeys":["resetRoot","open override fun resetRoot(newRoot: Screen, saveState: Boolean, restoreState: Boolean): ImmutableList<Screen>","com.slack.circuit.test.FakeNavigator.resetRoot"]},{"name":"suspend fun <UiState : CircuitUiState> Presenter<UiState>.test(timeout: Duration? = null, name: String? = null, policy: SnapshotMutationPolicy<UiState> = structuralEqualityPolicy(), block: suspend CircuitReceiveTurbine<UiState>.() -> Unit)","description":"com.slack.circuit.test.test","location":"circuit-test/com.slack.circuit.test/test.html","searchKeys":["test","suspend fun <UiState : CircuitUiState> Presenter<UiState>.test(timeout: Duration? = null, name: String? = null, policy: SnapshotMutationPolicy<UiState> = structuralEqualityPolicy(), block: suspend CircuitReceiveTurbine<UiState>.() -> Unit)","com.slack.circuit.test.test"]},{"name":"suspend fun <UiState : CircuitUiState> presenterTestOf(presentFunction: () -> UiState, timeout: Duration? = null, name: String? = null, policy: SnapshotMutationPolicy<UiState> = structuralEqualityPolicy(), block: suspend CircuitReceiveTurbine<UiState>.() -> Unit)","description":"com.slack.circuit.test.presenterTestOf","location":"circuit-test/com.slack.circuit.test/presenter-test-of.html","searchKeys":["presenterTestOf","suspend fun <UiState : CircuitUiState> presenterTestOf(presentFunction: () -> UiState, timeout: Duration? = null, name: String? = null, policy: SnapshotMutationPolicy<UiState> = structuralEqualityPolicy(), block: suspend CircuitReceiveTurbine<UiState>.() -> Unit)","com.slack.circuit.test.presenterTestOf"]},{"name":"suspend fun awaitNextGoTo(): FakeNavigator.GoToEvent","description":"com.slack.circuit.test.FakeNavigator.awaitNextGoTo","location":"circuit-test/com.slack.circuit.test/-fake-navigator/await-next-go-to.html","searchKeys":["awaitNextGoTo","suspend fun awaitNextGoTo(): FakeNavigator.GoToEvent","com.slack.circuit.test.FakeNavigator.awaitNextGoTo"]},{"name":"suspend fun awaitNextScreen(): Screen","description":"com.slack.circuit.test.FakeNavigator.awaitNextScreen","location":"circuit-test/com.slack.circuit.test/-fake-navigator/await-next-screen.html","searchKeys":["awaitNextScreen","suspend fun awaitNextScreen(): Screen","com.slack.circuit.test.FakeNavigator.awaitNextScreen"]},{"name":"suspend fun awaitPop(): FakeNavigator.PopEvent","description":"com.slack.circuit.test.FakeNavigator.awaitPop","location":"circuit-test/com.slack.circuit.test/-fake-navigator/await-pop.html","searchKeys":["awaitPop","suspend fun awaitPop(): FakeNavigator.PopEvent","com.slack.circuit.test.FakeNavigator.awaitPop"]},{"name":"suspend fun awaitResetRoot(): FakeNavigator.ResetRootEvent","description":"com.slack.circuit.test.FakeNavigator.awaitResetRoot","location":"circuit-test/com.slack.circuit.test/-fake-navigator/await-reset-root.html","searchKeys":["awaitResetRoot","suspend fun awaitResetRoot(): FakeNavigator.ResetRootEvent","com.slack.circuit.test.FakeNavigator.awaitResetRoot"]},{"name":"val DEFAULT_TIMEOUT: Duration","description":"com.slack.circuit.test.TestEventSink.Companion.DEFAULT_TIMEOUT","location":"circuit-test/com.slack.circuit.test/-test-event-sink/-companion/-d-e-f-a-u-l-t_-t-i-m-e-o-u-t.html","searchKeys":["DEFAULT_TIMEOUT","val DEFAULT_TIMEOUT: Duration","com.slack.circuit.test.TestEventSink.Companion.DEFAULT_TIMEOUT"]},{"name":"val newRoot: Screen","description":"com.slack.circuit.test.FakeNavigator.ResetRootEvent.newRoot","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-reset-root-event/new-root.html","searchKeys":["newRoot","val newRoot: Screen","com.slack.circuit.test.FakeNavigator.ResetRootEvent.newRoot"]},{"name":"val oldScreens: ImmutableList<Screen>","description":"com.slack.circuit.test.FakeNavigator.ResetRootEvent.oldScreens","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-reset-root-event/old-screens.html","searchKeys":["oldScreens","val oldScreens: ImmutableList<Screen>","com.slack.circuit.test.FakeNavigator.ResetRootEvent.oldScreens"]},{"name":"val poppedScreen: Screen?","description":"com.slack.circuit.test.FakeNavigator.PopEvent.poppedScreen","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-pop-event/popped-screen.html","searchKeys":["poppedScreen","val poppedScreen: Screen?","com.slack.circuit.test.FakeNavigator.PopEvent.poppedScreen"]},{"name":"val restoreState: Boolean = false","description":"com.slack.circuit.test.FakeNavigator.ResetRootEvent.restoreState","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-reset-root-event/restore-state.html","searchKeys":["restoreState","val restoreState: Boolean = false","com.slack.circuit.test.FakeNavigator.ResetRootEvent.restoreState"]},{"name":"val result: PopResult? = null","description":"com.slack.circuit.test.FakeNavigator.PopEvent.result","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-pop-event/result.html","searchKeys":["result","val result: PopResult? = null","com.slack.circuit.test.FakeNavigator.PopEvent.result"]},{"name":"val saveState: Boolean = false","description":"com.slack.circuit.test.FakeNavigator.ResetRootEvent.saveState","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-reset-root-event/save-state.html","searchKeys":["saveState","val saveState: Boolean = false","com.slack.circuit.test.FakeNavigator.ResetRootEvent.saveState"]},{"name":"val screen: Screen","description":"com.slack.circuit.test.FakeNavigator.GoToEvent.screen","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-go-to-event/screen.html","searchKeys":["screen","val screen: Screen","com.slack.circuit.test.FakeNavigator.GoToEvent.screen"]},{"name":"val success: Boolean","description":"com.slack.circuit.test.FakeNavigator.GoToEvent.success","location":"circuit-test/com.slack.circuit.test/-fake-navigator/-go-to-event/success.html","searchKeys":["success","val success: Boolean","com.slack.circuit.test.FakeNavigator.GoToEvent.success"]},{"name":"Cancel","description":"com.slack.circuitx.overlays.DialogResult.Cancel","location":"circuitx/overlays/com.slack.circuitx.overlays/-dialog-result/-cancel/index.html","searchKeys":["Cancel","Cancel","com.slack.circuitx.overlays.DialogResult.Cancel"]},{"name":"Confirm","description":"com.slack.circuitx.overlays.DialogResult.Confirm","location":"circuitx/overlays/com.slack.circuitx.overlays/-dialog-result/-confirm/index.html","searchKeys":["Confirm","Confirm","com.slack.circuitx.overlays.DialogResult.Confirm"]},{"name":"Dismiss","description":"com.slack.circuitx.overlays.DialogResult.Dismiss","location":"circuitx/overlays/com.slack.circuitx.overlays/-dialog-result/-dismiss/index.html","searchKeys":["Dismiss","Dismiss","com.slack.circuitx.overlays.DialogResult.Dismiss"]},{"name":"class BasicAlertDialogOverlay<Model : Any, Result : Any>(model: Model, onDismissRequest: () -> Result, properties: DialogProperties = DialogProperties(), content: (Model, OverlayNavigator<Result>) -> Unit) : Overlay<Result> ","description":"com.slack.circuitx.overlays.BasicAlertDialogOverlay","location":"circuitx/overlays/com.slack.circuitx.overlays/-basic-alert-dialog-overlay/index.html","searchKeys":["BasicAlertDialogOverlay","class BasicAlertDialogOverlay<Model : Any, Result : Any>(model: Model, onDismissRequest: () -> Result, properties: DialogProperties = DialogProperties(), content: (Model, OverlayNavigator<Result>) -> Unit) : Overlay<Result> ","com.slack.circuitx.overlays.BasicAlertDialogOverlay"]},{"name":"class BasicDialogOverlay<Model : Any, Result : Any>(model: Model, onDismissRequest: () -> Result, properties: DialogProperties = DialogProperties(), content: (Model, OverlayNavigator<Result>) -> Unit) : Overlay<Result> ","description":"com.slack.circuitx.overlays.BasicDialogOverlay","location":"circuitx/overlays/com.slack.circuitx.overlays/-basic-dialog-overlay/index.html","searchKeys":["BasicDialogOverlay","class BasicDialogOverlay<Model : Any, Result : Any>(model: Model, onDismissRequest: () -> Result, properties: DialogProperties = DialogProperties(), content: (Model, OverlayNavigator<Result>) -> Unit) : Overlay<Result> ","com.slack.circuitx.overlays.BasicDialogOverlay"]},{"name":"class BottomSheetOverlay<Model : Any, Result : Any> : Overlay<Result> ","description":"com.slack.circuitx.overlays.BottomSheetOverlay","location":"circuitx/overlays/com.slack.circuitx.overlays/-bottom-sheet-overlay/index.html","searchKeys":["BottomSheetOverlay","class BottomSheetOverlay<Model : Any, Result : Any> : Overlay<Result> ","com.slack.circuitx.overlays.BottomSheetOverlay"]},{"name":"constructor(model: Model, onDismiss: () -> Result, sheetContainerColor: Color? = null, tonalElevation: Dp? = null, sheetShape: Shape? = null, dragHandle: () -> Unit? = null, skipPartiallyExpandedState: Boolean = false, properties: ModalBottomSheetProperties = DEFAULT_PROPERTIES, content: (Model, OverlayNavigator<Result>) -> Unit)","description":"com.slack.circuitx.overlays.BottomSheetOverlay.BottomSheetOverlay","location":"circuitx/overlays/com.slack.circuitx.overlays/-bottom-sheet-overlay/-bottom-sheet-overlay.html","searchKeys":["BottomSheetOverlay","constructor(model: Model, onDismiss: () -> Result, sheetContainerColor: Color? = null, tonalElevation: Dp? = null, sheetShape: Shape? = null, dragHandle: () -> Unit? = null, skipPartiallyExpandedState: Boolean = false, properties: ModalBottomSheetProperties = DEFAULT_PROPERTIES, content: (Model, OverlayNavigator<Result>) -> Unit)","com.slack.circuitx.overlays.BottomSheetOverlay.BottomSheetOverlay"]},{"name":"constructor(model: Model, onDismissRequest: () -> Result, properties: DialogProperties = DialogProperties(), content: (Model, OverlayNavigator<Result>) -> Unit)","description":"com.slack.circuitx.overlays.BasicAlertDialogOverlay.BasicAlertDialogOverlay","location":"circuitx/overlays/com.slack.circuitx.overlays/-basic-alert-dialog-overlay/-basic-alert-dialog-overlay.html","searchKeys":["BasicAlertDialogOverlay","constructor(model: Model, onDismissRequest: () -> Result, properties: DialogProperties = DialogProperties(), content: (Model, OverlayNavigator<Result>) -> Unit)","com.slack.circuitx.overlays.BasicAlertDialogOverlay.BasicAlertDialogOverlay"]},{"name":"constructor(model: Model, onDismissRequest: () -> Result, properties: DialogProperties = DialogProperties(), content: (Model, OverlayNavigator<Result>) -> Unit)","description":"com.slack.circuitx.overlays.BasicDialogOverlay.BasicDialogOverlay","location":"circuitx/overlays/com.slack.circuitx.overlays/-basic-dialog-overlay/-basic-dialog-overlay.html","searchKeys":["BasicDialogOverlay","constructor(model: Model, onDismissRequest: () -> Result, properties: DialogProperties = DialogProperties(), content: (Model, OverlayNavigator<Result>) -> Unit)","com.slack.circuitx.overlays.BasicDialogOverlay.BasicDialogOverlay"]},{"name":"constructor(model: Model, sheetContainerColor: Color? = null, tonalElevation: Dp? = null, sheetShape: Shape? = null, dragHandle: () -> Unit? = null, skipPartiallyExpandedState: Boolean = false, isFocusable: Boolean = true, content: (Model, OverlayNavigator<Result>) -> Unit)","description":"com.slack.circuitx.overlays.BottomSheetOverlay.BottomSheetOverlay","location":"circuitx/overlays/com.slack.circuitx.overlays/-bottom-sheet-overlay/-bottom-sheet-overlay.html","searchKeys":["BottomSheetOverlay","constructor(model: Model, sheetContainerColor: Color? = null, tonalElevation: Dp? = null, sheetShape: Shape? = null, dragHandle: () -> Unit? = null, skipPartiallyExpandedState: Boolean = false, isFocusable: Boolean = true, content: (Model, OverlayNavigator<Result>) -> Unit)","com.slack.circuitx.overlays.BottomSheetOverlay.BottomSheetOverlay"]},{"name":"enum DialogResult : Enum<DialogResult> ","description":"com.slack.circuitx.overlays.DialogResult","location":"circuitx/overlays/com.slack.circuitx.overlays/-dialog-result/index.html","searchKeys":["DialogResult","enum DialogResult : Enum<DialogResult> ","com.slack.circuitx.overlays.DialogResult"]},{"name":"expect suspend fun OverlayHost.showFullScreenOverlay(screen: Screen): PopResult?","description":"com.slack.circuitx.overlays.showFullScreenOverlay","location":"circuitx/overlays/com.slack.circuitx.overlays/show-full-screen-overlay.html","searchKeys":["showFullScreenOverlay","expect suspend fun OverlayHost.showFullScreenOverlay(screen: Screen): PopResult?","com.slack.circuitx.overlays.showFullScreenOverlay"]},{"name":"fun alertDialogOverlay(confirmButton: (OnClick) -> Unit, icon: () -> Unit? = null, title: () -> Unit? = null, text: () -> Unit? = null, dismissButton: (OnClick) -> Unit?, properties: DialogProperties = DialogProperties()): BasicAlertDialogOverlay<*, DialogResult>","description":"com.slack.circuitx.overlays.alertDialogOverlay","location":"circuitx/overlays/com.slack.circuitx.overlays/alert-dialog-overlay.html","searchKeys":["alertDialogOverlay","fun alertDialogOverlay(confirmButton: (OnClick) -> Unit, icon: () -> Unit? = null, title: () -> Unit? = null, text: () -> Unit? = null, dismissButton: (OnClick) -> Unit?, properties: DialogProperties = DialogProperties()): BasicAlertDialogOverlay<*, DialogResult>","com.slack.circuitx.overlays.alertDialogOverlay"]},{"name":"fun valueOf(value: String): DialogResult","description":"com.slack.circuitx.overlays.DialogResult.valueOf","location":"circuitx/overlays/com.slack.circuitx.overlays/-dialog-result/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): DialogResult","com.slack.circuitx.overlays.DialogResult.valueOf"]},{"name":"fun values(): Array<DialogResult>","description":"com.slack.circuitx.overlays.DialogResult.values","location":"circuitx/overlays/com.slack.circuitx.overlays/-dialog-result/values.html","searchKeys":["values","fun values(): Array<DialogResult>","com.slack.circuitx.overlays.DialogResult.values"]},{"name":"open override fun Content(navigator: OverlayNavigator<Result>)","description":"com.slack.circuitx.overlays.BasicAlertDialogOverlay.Content","location":"circuitx/overlays/com.slack.circuitx.overlays/-basic-alert-dialog-overlay/-content.html","searchKeys":["Content","open override fun Content(navigator: OverlayNavigator<Result>)","com.slack.circuitx.overlays.BasicAlertDialogOverlay.Content"]},{"name":"open override fun Content(navigator: OverlayNavigator<Result>)","description":"com.slack.circuitx.overlays.BasicDialogOverlay.Content","location":"circuitx/overlays/com.slack.circuitx.overlays/-basic-dialog-overlay/-content.html","searchKeys":["Content","open override fun Content(navigator: OverlayNavigator<Result>)","com.slack.circuitx.overlays.BasicDialogOverlay.Content"]},{"name":"open override fun Content(navigator: OverlayNavigator<Result>)","description":"com.slack.circuitx.overlays.BottomSheetOverlay.Content","location":"circuitx/overlays/com.slack.circuitx.overlays/-bottom-sheet-overlay/-content.html","searchKeys":["Content","open override fun Content(navigator: OverlayNavigator<Result>)","com.slack.circuitx.overlays.BottomSheetOverlay.Content"]},{"name":"typealias OnClick = () -> Unit","description":"com.slack.circuitx.overlays.OnClick","location":"circuitx/overlays/com.slack.circuitx.overlays/-on-click/index.html","searchKeys":["OnClick","typealias OnClick = () -> Unit","com.slack.circuitx.overlays.OnClick"]},{"name":"val entries: EnumEntries<DialogResult>","description":"com.slack.circuitx.overlays.DialogResult.entries","location":"circuitx/overlays/com.slack.circuitx.overlays/-dialog-result/entries.html","searchKeys":["entries","val entries: EnumEntries<DialogResult>","com.slack.circuitx.overlays.DialogResult.entries"]},{"name":"fun ImpressionEffect(vararg inputs: Any?, impression: () -> Unit)","description":"com.slack.circuitx.effects.ImpressionEffect","location":"circuitx/effects/com.slack.circuitx.effects/-impression-effect.html","searchKeys":["ImpressionEffect","fun ImpressionEffect(vararg inputs: Any?, impression: () -> Unit)","com.slack.circuitx.effects.ImpressionEffect"]},{"name":"fun LaunchedImpressionEffect(vararg inputs: Any?, impression: suspend () -> Unit)","description":"com.slack.circuitx.effects.LaunchedImpressionEffect","location":"circuitx/effects/com.slack.circuitx.effects/-launched-impression-effect.html","searchKeys":["LaunchedImpressionEffect","fun LaunchedImpressionEffect(vararg inputs: Any?, impression: suspend () -> Unit)","com.slack.circuitx.effects.LaunchedImpressionEffect"]},{"name":"fun rememberImpressionNavigator(vararg inputs: Any?, navigator: Navigator, impression: suspend () -> Unit): Navigator","description":"com.slack.circuitx.effects.rememberImpressionNavigator","location":"circuitx/effects/com.slack.circuitx.effects/remember-impression-navigator.html","searchKeys":["rememberImpressionNavigator","fun rememberImpressionNavigator(vararg inputs: Any?, navigator: Navigator, impression: suspend () -> Unit): Navigator","com.slack.circuitx.effects.rememberImpressionNavigator"]},{"name":"fun toastEffect(duration: Int = Toast.LENGTH_SHORT): (String) -> Unit","description":"com.slack.circuitx.effects.toastEffect","location":"circuitx/effects/com.slack.circuitx.effects/toast-effect.html","searchKeys":["toastEffect","fun toastEffect(duration: Int = Toast.LENGTH_SHORT): (String) -> Unit","com.slack.circuitx.effects.toastEffect"]},{"name":"class AndroidPredictiveBackNavigationDecoration(onBackInvoked: () -> Unit) : NavDecoration","description":"com.slack.circuitx.gesturenavigation.AndroidPredictiveBackNavigationDecoration","location":"circuitx/gesture-navigation/com.slack.circuitx.gesturenavigation/-android-predictive-back-navigation-decoration/index.html","searchKeys":["AndroidPredictiveBackNavigationDecoration","class AndroidPredictiveBackNavigationDecoration(onBackInvoked: () -> Unit) : NavDecoration","com.slack.circuitx.gesturenavigation.AndroidPredictiveBackNavigationDecoration"]},{"name":"class CupertinoGestureNavigationDecoration(enterOffsetFraction: Float = 0.25f, swipeThreshold: ThresholdConfig = FractionalThreshold(0.4f), swipeBackFromNestedScroll: Boolean = true, onBackInvoked: () -> Unit) : NavDecoration","description":"com.slack.circuitx.gesturenavigation.CupertinoGestureNavigationDecoration","location":"circuitx/gesture-navigation/com.slack.circuitx.gesturenavigation/-cupertino-gesture-navigation-decoration/index.html","searchKeys":["CupertinoGestureNavigationDecoration","class CupertinoGestureNavigationDecoration(enterOffsetFraction: Float = 0.25f, swipeThreshold: ThresholdConfig = FractionalThreshold(0.4f), swipeBackFromNestedScroll: Boolean = true, onBackInvoked: () -> Unit) : NavDecoration","com.slack.circuitx.gesturenavigation.CupertinoGestureNavigationDecoration"]},{"name":"constructor(enterOffsetFraction: Float = 0.25f, swipeThreshold: ThresholdConfig = FractionalThreshold(0.4f), swipeBackFromNestedScroll: Boolean = true, onBackInvoked: () -> Unit)","description":"com.slack.circuitx.gesturenavigation.CupertinoGestureNavigationDecoration.CupertinoGestureNavigationDecoration","location":"circuitx/gesture-navigation/com.slack.circuitx.gesturenavigation/-cupertino-gesture-navigation-decoration/-cupertino-gesture-navigation-decoration.html","searchKeys":["CupertinoGestureNavigationDecoration","constructor(enterOffsetFraction: Float = 0.25f, swipeThreshold: ThresholdConfig = FractionalThreshold(0.4f), swipeBackFromNestedScroll: Boolean = true, onBackInvoked: () -> Unit)","com.slack.circuitx.gesturenavigation.CupertinoGestureNavigationDecoration.CupertinoGestureNavigationDecoration"]},{"name":"constructor(onBackInvoked: () -> Unit)","description":"com.slack.circuitx.gesturenavigation.AndroidPredictiveBackNavigationDecoration.AndroidPredictiveBackNavigationDecoration","location":"circuitx/gesture-navigation/com.slack.circuitx.gesturenavigation/-android-predictive-back-navigation-decoration/-android-predictive-back-navigation-decoration.html","searchKeys":["AndroidPredictiveBackNavigationDecoration","constructor(onBackInvoked: () -> Unit)","com.slack.circuitx.gesturenavigation.AndroidPredictiveBackNavigationDecoration.AndroidPredictiveBackNavigationDecoration"]},{"name":"expect fun GestureNavigationDecoration(fallback: NavDecoration = NavigatorDefaults.DefaultDecoration, onBackInvoked: () -> Unit): NavDecoration","description":"com.slack.circuitx.gesturenavigation.GestureNavigationDecoration","location":"circuitx/gesture-navigation/com.slack.circuitx.gesturenavigation/-gesture-navigation-decoration.html","searchKeys":["GestureNavigationDecoration","expect fun GestureNavigationDecoration(fallback: NavDecoration = NavigatorDefaults.DefaultDecoration, onBackInvoked: () -> Unit): NavDecoration","com.slack.circuitx.gesturenavigation.GestureNavigationDecoration"]},{"name":"open override fun <T> DecoratedContent(args: ImmutableList<T>, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","description":"com.slack.circuitx.gesturenavigation.AndroidPredictiveBackNavigationDecoration.DecoratedContent","location":"circuitx/gesture-navigation/com.slack.circuitx.gesturenavigation/-android-predictive-back-navigation-decoration/-decorated-content.html","searchKeys":["DecoratedContent","open override fun <T> DecoratedContent(args: ImmutableList<T>, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","com.slack.circuitx.gesturenavigation.AndroidPredictiveBackNavigationDecoration.DecoratedContent"]},{"name":"open override fun <T> DecoratedContent(args: ImmutableList<T>, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","description":"com.slack.circuitx.gesturenavigation.CupertinoGestureNavigationDecoration.DecoratedContent","location":"circuitx/gesture-navigation/com.slack.circuitx.gesturenavigation/-cupertino-gesture-navigation-decoration/-decorated-content.html","searchKeys":["DecoratedContent","open override fun <T> DecoratedContent(args: ImmutableList<T>, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","com.slack.circuitx.gesturenavigation.CupertinoGestureNavigationDecoration.DecoratedContent"]},{"name":"expect interface PopResult","description":"com.slack.circuit.runtime.screen.PopResult","location":"circuit-runtime-screen/com.slack.circuit.runtime.screen/-pop-result/index.html","searchKeys":["PopResult","expect interface PopResult","com.slack.circuit.runtime.screen.PopResult"]},{"name":"expect interface Screen","description":"com.slack.circuit.runtime.screen.Screen","location":"circuit-runtime-screen/com.slack.circuit.runtime.screen/-screen/index.html","searchKeys":["Screen","expect interface Screen","com.slack.circuit.runtime.screen.Screen"]},{"name":"expect interface StaticScreen : Screen","description":"com.slack.circuit.runtime.screen.StaticScreen","location":"circuit-runtime-screen/com.slack.circuit.runtime.screen/-static-screen/index.html","searchKeys":["StaticScreen","expect interface StaticScreen : Screen","com.slack.circuit.runtime.screen.StaticScreen"]},{"name":"abstract fun create(screen: Screen, context: CircuitContext): EventListener","description":"com.slack.circuit.foundation.EventListener.Factory.create","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/-factory/create.html","searchKeys":["create","abstract fun create(screen: Screen, context: CircuitContext): EventListener","com.slack.circuit.foundation.EventListener.Factory.create"]},{"name":"abstract val isActive: Boolean","description":"com.slack.circuit.foundation.RecordLifecycle.isActive","location":"circuit-foundation/com.slack.circuit.foundation/-record-lifecycle/is-active.html","searchKeys":["isActive","abstract val isActive: Boolean","com.slack.circuit.foundation.RecordLifecycle.isActive"]},{"name":"annotation class DelicateCircuitFoundationApi","description":"com.slack.circuit.foundation.DelicateCircuitFoundationApi","location":"circuit-foundation/com.slack.circuit.foundation/-delicate-circuit-foundation-api/index.html","searchKeys":["DelicateCircuitFoundationApi","annotation class DelicateCircuitFoundationApi","com.slack.circuit.foundation.DelicateCircuitFoundationApi"]},{"name":"class Builder","description":"com.slack.circuit.foundation.Circuit.Builder","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/index.html","searchKeys":["Builder","class Builder","com.slack.circuit.foundation.Circuit.Builder"]},{"name":"class Circuit","description":"com.slack.circuit.foundation.Circuit","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/index.html","searchKeys":["Circuit","class Circuit","com.slack.circuit.foundation.Circuit"]},{"name":"class RecordContentProvider<R : BackStack.Record>(val record: R, content: (R) -> Unit)","description":"com.slack.circuit.foundation.RecordContentProvider","location":"circuit-foundation/com.slack.circuit.foundation/-record-content-provider/index.html","searchKeys":["RecordContentProvider","class RecordContentProvider<R : BackStack.Record>(val record: R, content: (R) -> Unit)","com.slack.circuit.foundation.RecordContentProvider"]},{"name":"constructor()","description":"com.slack.circuit.foundation.Circuit.Builder.Builder","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/-builder.html","searchKeys":["Builder","constructor()","com.slack.circuit.foundation.Circuit.Builder.Builder"]},{"name":"constructor(newRoot: Screen, saveState: Boolean, restoreState: Boolean)","description":"com.slack.circuit.foundation.NavEvent.ResetRoot.ResetRoot","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-reset-root/-reset-root.html","searchKeys":["ResetRoot","constructor(newRoot: Screen, saveState: Boolean, restoreState: Boolean)","com.slack.circuit.foundation.NavEvent.ResetRoot.ResetRoot"]},{"name":"constructor(record: R, content: (R) -> Unit)","description":"com.slack.circuit.foundation.RecordContentProvider.RecordContentProvider","location":"circuit-foundation/com.slack.circuit.foundation/-record-content-provider/-record-content-provider.html","searchKeys":["RecordContentProvider","constructor(record: R, content: (R) -> Unit)","com.slack.circuit.foundation.RecordContentProvider.RecordContentProvider"]},{"name":"constructor(result: PopResult? = null)","description":"com.slack.circuit.foundation.NavEvent.Pop.Pop","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-pop/-pop.html","searchKeys":["Pop","constructor(result: PopResult? = null)","com.slack.circuit.foundation.NavEvent.Pop.Pop"]},{"name":"constructor(screen: Screen)","description":"com.slack.circuit.foundation.NavEvent.GoTo.GoTo","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-go-to/-go-to.html","searchKeys":["GoTo","constructor(screen: Screen)","com.slack.circuit.foundation.NavEvent.GoTo.GoTo"]},{"name":"data class GoTo(val screen: Screen) : NavEvent","description":"com.slack.circuit.foundation.NavEvent.GoTo","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-go-to/index.html","searchKeys":["GoTo","data class GoTo(val screen: Screen) : NavEvent","com.slack.circuit.foundation.NavEvent.GoTo"]},{"name":"data class Pop(val result: PopResult? = null) : NavEvent","description":"com.slack.circuit.foundation.NavEvent.Pop","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-pop/index.html","searchKeys":["Pop","data class Pop(val result: PopResult? = null) : NavEvent","com.slack.circuit.foundation.NavEvent.Pop"]},{"name":"data class ResetRoot(val newRoot: Screen, val saveState: Boolean, val restoreState: Boolean) : NavEvent","description":"com.slack.circuit.foundation.NavEvent.ResetRoot","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-reset-root/index.html","searchKeys":["ResetRoot","data class ResetRoot(val newRoot: Screen, val saveState: Boolean, val restoreState: Boolean) : NavEvent","com.slack.circuit.foundation.NavEvent.ResetRoot"]},{"name":"expect fun BackHandler(enabled: Boolean = true, onBack: () -> Unit)","description":"com.slack.circuit.foundation.internal.BackHandler","location":"circuit-foundation/com.slack.circuit.foundation.internal/-back-handler.html","searchKeys":["BackHandler","expect fun BackHandler(enabled: Boolean = true, onBack: () -> Unit)","com.slack.circuit.foundation.internal.BackHandler"]},{"name":"fun <R : BackStack.Record> NavigableCircuitContent(navigator: Navigator, backStack: BackStack<R>, modifier: Modifier = Modifier, circuit: Circuit = requireNotNull(LocalCircuit.current), providedValues: ImmutableMap<out BackStack.Record, ProvidedValues> = providedValuesForBackStack(backStack), decoration: NavDecoration = circuit.defaultNavDecoration, unavailableRoute: (screen: Screen, modifier: Modifier) -> Unit = circuit.onUnavailableContent)","description":"com.slack.circuit.foundation.NavigableCircuitContent","location":"circuit-foundation/com.slack.circuit.foundation/-navigable-circuit-content.html","searchKeys":["NavigableCircuitContent","fun <R : BackStack.Record> NavigableCircuitContent(navigator: Navigator, backStack: BackStack<R>, modifier: Modifier = Modifier, circuit: Circuit = requireNotNull(LocalCircuit.current), providedValues: ImmutableMap<out BackStack.Record, ProvidedValues> = providedValuesForBackStack(backStack), decoration: NavDecoration = circuit.defaultNavDecoration, unavailableRoute: (screen: Screen, modifier: Modifier) -> Unit = circuit.onUnavailableContent)","com.slack.circuit.foundation.NavigableCircuitContent"]},{"name":"fun <T : PopResult> rememberAnsweringNavigator(backStack: BackStack<out BackStack.Record>, resultType: KClass<T>, block: suspend CoroutineScope.(result: T) -> Unit): GoToNavigator","description":"com.slack.circuit.foundation.rememberAnsweringNavigator","location":"circuit-foundation/com.slack.circuit.foundation/remember-answering-navigator.html","searchKeys":["rememberAnsweringNavigator","fun <T : PopResult> rememberAnsweringNavigator(backStack: BackStack<out BackStack.Record>, resultType: KClass<T>, block: suspend CoroutineScope.(result: T) -> Unit): GoToNavigator","com.slack.circuit.foundation.rememberAnsweringNavigator"]},{"name":"fun <T : PopResult> rememberAnsweringNavigator(fallbackNavigator: Navigator, resultType: KClass<T>, block: suspend CoroutineScope.(result: T) -> Unit): GoToNavigator","description":"com.slack.circuit.foundation.rememberAnsweringNavigator","location":"circuit-foundation/com.slack.circuit.foundation/remember-answering-navigator.html","searchKeys":["rememberAnsweringNavigator","fun <T : PopResult> rememberAnsweringNavigator(fallbackNavigator: Navigator, resultType: KClass<T>, block: suspend CoroutineScope.(result: T) -> Unit): GoToNavigator","com.slack.circuit.foundation.rememberAnsweringNavigator"]},{"name":"fun <T> pausableState(key: String? = null, isActive: Boolean = LocalRecordLifecycle.current.isActive, produceState: () -> T): T","description":"com.slack.circuit.foundation.pausableState","location":"circuit-foundation/com.slack.circuit.foundation/pausable-state.html","searchKeys":["pausableState","fun <T> pausableState(key: String? = null, isActive: Boolean = LocalRecordLifecycle.current.isActive, produceState: () -> T): T","com.slack.circuit.foundation.pausableState"]},{"name":"fun <UiState : CircuitUiState> CircuitContent(screen: Screen, presenter: Presenter<UiState>, ui: Ui<UiState>, modifier: Modifier = Modifier, eventListener: EventListener = EventListener.NONE, key: Any? = screen, presentWithLifecycle: Boolean = LocalCircuit.current?.presentWithLifecycle == true)","description":"com.slack.circuit.foundation.CircuitContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-content.html","searchKeys":["CircuitContent","fun <UiState : CircuitUiState> CircuitContent(screen: Screen, presenter: Presenter<UiState>, ui: Ui<UiState>, modifier: Modifier = Modifier, eventListener: EventListener = EventListener.NONE, key: Any? = screen, presentWithLifecycle: Boolean = LocalCircuit.current?.presentWithLifecycle == true)","com.slack.circuit.foundation.CircuitContent"]},{"name":"fun CircuitCompositionLocals(circuit: Circuit, retainedStateRegistry: RetainedStateRegistry = continuityRetainedStateRegistry(), content: () -> Unit)","description":"com.slack.circuit.foundation.CircuitCompositionLocals","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-composition-locals.html","searchKeys":["CircuitCompositionLocals","fun CircuitCompositionLocals(circuit: Circuit, retainedStateRegistry: RetainedStateRegistry = continuityRetainedStateRegistry(), content: () -> Unit)","com.slack.circuit.foundation.CircuitCompositionLocals"]},{"name":"fun CircuitContent(screen: Screen, modifier: Modifier = Modifier, circuit: Circuit = requireNotNull(LocalCircuit.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuit.onUnavailableContent, key: Any? = screen)","description":"com.slack.circuit.foundation.CircuitContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-content.html","searchKeys":["CircuitContent","fun CircuitContent(screen: Screen, modifier: Modifier = Modifier, circuit: Circuit = requireNotNull(LocalCircuit.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuit.onUnavailableContent, key: Any? = screen)","com.slack.circuit.foundation.CircuitContent"]},{"name":"fun CircuitContent(screen: Screen, modifier: Modifier = Modifier, onNavEvent: (event: NavEvent) -> Unit, circuit: Circuit = requireNotNull(LocalCircuit.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuit.onUnavailableContent, key: Any? = screen)","description":"com.slack.circuit.foundation.CircuitContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-content.html","searchKeys":["CircuitContent","fun CircuitContent(screen: Screen, modifier: Modifier = Modifier, onNavEvent: (event: NavEvent) -> Unit, circuit: Circuit = requireNotNull(LocalCircuit.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuit.onUnavailableContent, key: Any? = screen)","com.slack.circuit.foundation.CircuitContent"]},{"name":"fun CircuitContent(screen: Screen, navigator: Navigator, modifier: Modifier = Modifier, circuit: Circuit = requireNotNull(LocalCircuit.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuit.onUnavailableContent, key: Any? = screen)","description":"com.slack.circuit.foundation.CircuitContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-content.html","searchKeys":["CircuitContent","fun CircuitContent(screen: Screen, navigator: Navigator, modifier: Modifier = Modifier, circuit: Circuit = requireNotNull(LocalCircuit.current), unavailableContent: (screen: Screen, modifier: Modifier) -> Unit = circuit.onUnavailableContent, key: Any? = screen)","com.slack.circuit.foundation.CircuitContent"]},{"name":"fun CircuitPreview(content: () -> Unit)","description":"com.slack.circuit.foundation.CircuitPreview","location":"circuit-foundation/com.slack.circuit.foundation/-circuit-preview.html","searchKeys":["CircuitPreview","fun CircuitPreview(content: () -> Unit)","com.slack.circuit.foundation.CircuitPreview"]},{"name":"fun Navigator(backStack: BackStack<out BackStack.Record>, onRootPop: (result: PopResult?) -> Unit): Navigator","description":"com.slack.circuit.foundation.Navigator","location":"circuit-foundation/com.slack.circuit.foundation/-navigator.html","searchKeys":["Navigator","fun Navigator(backStack: BackStack<out BackStack.Record>, onRootPop: (result: PopResult?) -> Unit): Navigator","com.slack.circuit.foundation.Navigator"]},{"name":"fun Navigator.onNavEvent(event: NavEvent)","description":"com.slack.circuit.foundation.onNavEvent","location":"circuit-foundation/com.slack.circuit.foundation/on-nav-event.html","searchKeys":["onNavEvent","fun Navigator.onNavEvent(event: NavEvent)","com.slack.circuit.foundation.onNavEvent"]},{"name":"fun addPresenterFactories(factories: Iterable<Presenter.Factory>): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.addPresenterFactories","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/add-presenter-factories.html","searchKeys":["addPresenterFactories","fun addPresenterFactories(factories: Iterable<Presenter.Factory>): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.addPresenterFactories"]},{"name":"fun addPresenterFactory(factory: Presenter.Factory): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.addPresenterFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/add-presenter-factory.html","searchKeys":["addPresenterFactory","fun addPresenterFactory(factory: Presenter.Factory): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.addPresenterFactory"]},{"name":"fun addPresenterFactory(vararg factory: Presenter.Factory): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.addPresenterFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/add-presenter-factory.html","searchKeys":["addPresenterFactory","fun addPresenterFactory(vararg factory: Presenter.Factory): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.addPresenterFactory"]},{"name":"fun addUiFactories(factories: Iterable<Ui.Factory>): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.addUiFactories","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/add-ui-factories.html","searchKeys":["addUiFactories","fun addUiFactories(factories: Iterable<Ui.Factory>): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.addUiFactories"]},{"name":"fun addUiFactory(factory: Ui.Factory): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.addUiFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/add-ui-factory.html","searchKeys":["addUiFactory","fun addUiFactory(factory: Ui.Factory): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.addUiFactory"]},{"name":"fun addUiFactory(vararg factory: Ui.Factory): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.addUiFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/add-ui-factory.html","searchKeys":["addUiFactory","fun addUiFactory(vararg factory: Ui.Factory): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.addUiFactory"]},{"name":"fun answeringNavigationAvailable(): Boolean","description":"com.slack.circuit.foundation.answeringNavigationAvailable","location":"circuit-foundation/com.slack.circuit.foundation/answering-navigation-available.html","searchKeys":["answeringNavigationAvailable","fun answeringNavigationAvailable(): Boolean","com.slack.circuit.foundation.answeringNavigationAvailable"]},{"name":"fun build(): Circuit","description":"com.slack.circuit.foundation.Circuit.Builder.build","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/build.html","searchKeys":["build","fun build(): Circuit","com.slack.circuit.foundation.Circuit.Builder.build"]},{"name":"fun eventListenerFactory(factory: EventListener.Factory): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.eventListenerFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/event-listener-factory.html","searchKeys":["eventListenerFactory","fun eventListenerFactory(factory: EventListener.Factory): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.eventListenerFactory"]},{"name":"fun interface Factory","description":"com.slack.circuit.foundation.EventListener.Factory","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/-factory/index.html","searchKeys":["Factory","fun interface Factory","com.slack.circuit.foundation.EventListener.Factory"]},{"name":"fun newBuilder(): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.newBuilder","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): Circuit.Builder","com.slack.circuit.foundation.Circuit.newBuilder"]},{"name":"fun nextPresenter(skipPast: Presenter.Factory?, screen: Screen, navigator: Navigator, context: CircuitContext): Presenter<*>?","description":"com.slack.circuit.foundation.Circuit.nextPresenter","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/next-presenter.html","searchKeys":["nextPresenter","fun nextPresenter(skipPast: Presenter.Factory?, screen: Screen, navigator: Navigator, context: CircuitContext): Presenter<*>?","com.slack.circuit.foundation.Circuit.nextPresenter"]},{"name":"fun nextUi(skipPast: Ui.Factory?, screen: Screen, context: CircuitContext): Ui<*>?","description":"com.slack.circuit.foundation.Circuit.nextUi","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/next-ui.html","searchKeys":["nextUi","fun nextUi(skipPast: Ui.Factory?, screen: Screen, context: CircuitContext): Ui<*>?","com.slack.circuit.foundation.Circuit.nextUi"]},{"name":"fun presentWithLifecycle(enable: Boolean = true): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.presentWithLifecycle","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/present-with-lifecycle.html","searchKeys":["presentWithLifecycle","fun presentWithLifecycle(enable: Boolean = true): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.presentWithLifecycle"]},{"name":"fun presenter(screen: Screen, navigator: Navigator, context: CircuitContext = CircuitContext(null).also { it.circuit = this }): Presenter<*>?","description":"com.slack.circuit.foundation.Circuit.presenter","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/presenter.html","searchKeys":["presenter","fun presenter(screen: Screen, navigator: Navigator, context: CircuitContext = CircuitContext(null).also { it.circuit = this }): Presenter<*>?","com.slack.circuit.foundation.Circuit.presenter"]},{"name":"fun rememberCircuitNavigator(backStack: BackStack<out BackStack.Record>, enableBackHandler: Boolean = true): Navigator","description":"com.slack.circuit.foundation.rememberCircuitNavigator","location":"circuit-foundation/com.slack.circuit.foundation/remember-circuit-navigator.html","searchKeys":["rememberCircuitNavigator","fun rememberCircuitNavigator(backStack: BackStack<out BackStack.Record>, enableBackHandler: Boolean = true): Navigator","com.slack.circuit.foundation.rememberCircuitNavigator"]},{"name":"fun rememberCircuitNavigator(backStack: BackStack<out BackStack.Record>, onRootPop: (result: PopResult?) -> Unit): Navigator","description":"com.slack.circuit.foundation.rememberCircuitNavigator","location":"circuit-foundation/com.slack.circuit.foundation/remember-circuit-navigator.html","searchKeys":["rememberCircuitNavigator","fun rememberCircuitNavigator(backStack: BackStack<out BackStack.Record>, onRootPop: (result: PopResult?) -> Unit): Navigator","com.slack.circuit.foundation.rememberCircuitNavigator"]},{"name":"fun setDefaultNavDecoration(decoration: NavDecoration): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.setDefaultNavDecoration","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/set-default-nav-decoration.html","searchKeys":["setDefaultNavDecoration","fun setDefaultNavDecoration(decoration: NavDecoration): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.setDefaultNavDecoration"]},{"name":"fun setOnUnavailableContent(content: (screen: Screen, modifier: Modifier) -> Unit): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.setOnUnavailableContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/set-on-unavailable-content.html","searchKeys":["setOnUnavailableContent","fun setOnUnavailableContent(content: (screen: Screen, modifier: Modifier) -> Unit): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.setOnUnavailableContent"]},{"name":"fun ui(screen: Screen, context: CircuitContext = CircuitContext(null).also { it.circuit = this }): Ui<*>?","description":"com.slack.circuit.foundation.Circuit.ui","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/ui.html","searchKeys":["ui","fun ui(screen: Screen, context: CircuitContext = CircuitContext(null).also { it.circuit = this }): Ui<*>?","com.slack.circuit.foundation.Circuit.ui"]},{"name":"inline fun <S : Screen, UiState : CircuitUiState> addPresenter(crossinline factory: (screen: S, navigator: Navigator, context: CircuitContext) -> Presenter<UiState>): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.addPresenter","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/add-presenter.html","searchKeys":["addPresenter","inline fun <S : Screen, UiState : CircuitUiState> addPresenter(crossinline factory: (screen: S, navigator: Navigator, context: CircuitContext) -> Presenter<UiState>): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.addPresenter"]},{"name":"inline fun <S : Screen, UiState : CircuitUiState> addPresenter(presenter: Presenter<UiState>): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.addPresenter","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/add-presenter.html","searchKeys":["addPresenter","inline fun <S : Screen, UiState : CircuitUiState> addPresenter(presenter: Presenter<UiState>): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.addPresenter"]},{"name":"inline fun <S : Screen, UiState : CircuitUiState> addStaticUi(crossinline content: (screen: S, modifier: Modifier) -> Unit): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.addStaticUi","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/add-static-ui.html","searchKeys":["addStaticUi","inline fun <S : Screen, UiState : CircuitUiState> addStaticUi(crossinline content: (screen: S, modifier: Modifier) -> Unit): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.addStaticUi"]},{"name":"inline fun <S : Screen, UiState : CircuitUiState> addUi(crossinline content: (state: UiState, modifier: Modifier) -> Unit): Circuit.Builder","description":"com.slack.circuit.foundation.Circuit.Builder.addUi","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/add-ui.html","searchKeys":["addUi","inline fun <S : Screen, UiState : CircuitUiState> addUi(crossinline content: (state: UiState, modifier: Modifier) -> Unit): Circuit.Builder","com.slack.circuit.foundation.Circuit.Builder.addUi"]},{"name":"inline fun <T : PopResult> rememberAnsweringNavigator(backStack: BackStack<out BackStack.Record>, noinline block: suspend CoroutineScope.(result: T) -> Unit): GoToNavigator","description":"com.slack.circuit.foundation.rememberAnsweringNavigator","location":"circuit-foundation/com.slack.circuit.foundation/remember-answering-navigator.html","searchKeys":["rememberAnsweringNavigator","inline fun <T : PopResult> rememberAnsweringNavigator(backStack: BackStack<out BackStack.Record>, noinline block: suspend CoroutineScope.(result: T) -> Unit): GoToNavigator","com.slack.circuit.foundation.rememberAnsweringNavigator"]},{"name":"inline fun <T : PopResult> rememberAnsweringNavigator(fallbackNavigator: Navigator, noinline block: suspend CoroutineScope.(result: T) -> Unit): GoToNavigator","description":"com.slack.circuit.foundation.rememberAnsweringNavigator","location":"circuit-foundation/com.slack.circuit.foundation/remember-answering-navigator.html","searchKeys":["rememberAnsweringNavigator","inline fun <T : PopResult> rememberAnsweringNavigator(fallbackNavigator: Navigator, noinline block: suspend CoroutineScope.(result: T) -> Unit): GoToNavigator","com.slack.circuit.foundation.rememberAnsweringNavigator"]},{"name":"inline fun <UiState : CircuitUiState> Presenter<UiState>.presentWithLifecycle(key: String? = null, isActive: Boolean = LocalRecordLifecycle.current.isActive): UiState","description":"com.slack.circuit.foundation.presentWithLifecycle","location":"circuit-foundation/com.slack.circuit.foundation/present-with-lifecycle.html","searchKeys":["presentWithLifecycle","inline fun <UiState : CircuitUiState> Presenter<UiState>.presentWithLifecycle(key: String? = null, isActive: Boolean = LocalRecordLifecycle.current.isActive): UiState","com.slack.circuit.foundation.presentWithLifecycle"]},{"name":"inline fun rememberEventListener(screen: Screen, context: CircuitContext = CircuitContext.EMPTY, startOnInit: Boolean = true, factory: EventListener.Factory? = null): EventListener","description":"com.slack.circuit.foundation.rememberEventListener","location":"circuit-foundation/com.slack.circuit.foundation/remember-event-listener.html","searchKeys":["rememberEventListener","inline fun rememberEventListener(screen: Screen, context: CircuitContext = CircuitContext.EMPTY, startOnInit: Boolean = true, factory: EventListener.Factory? = null): EventListener","com.slack.circuit.foundation.rememberEventListener"]},{"name":"inline fun rememberPresenter(screen: Screen, navigator: Navigator = Navigator.NoOp, context: CircuitContext = CircuitContext.EMPTY, eventListener: EventListener = EventListener.NONE, factory: Presenter.Factory): Presenter<CircuitUiState>?","description":"com.slack.circuit.foundation.rememberPresenter","location":"circuit-foundation/com.slack.circuit.foundation/remember-presenter.html","searchKeys":["rememberPresenter","inline fun rememberPresenter(screen: Screen, navigator: Navigator = Navigator.NoOp, context: CircuitContext = CircuitContext.EMPTY, eventListener: EventListener = EventListener.NONE, factory: Presenter.Factory): Presenter<CircuitUiState>?","com.slack.circuit.foundation.rememberPresenter"]},{"name":"inline fun rememberUi(screen: Screen, context: CircuitContext = CircuitContext.EMPTY, eventListener: EventListener = EventListener.NONE, factory: Ui.Factory): Ui<CircuitUiState>?","description":"com.slack.circuit.foundation.rememberUi","location":"circuit-foundation/com.slack.circuit.foundation/remember-ui.html","searchKeys":["rememberUi","inline fun rememberUi(screen: Screen, context: CircuitContext = CircuitContext.EMPTY, eventListener: EventListener = EventListener.NONE, factory: Ui.Factory): Ui<CircuitUiState>?","com.slack.circuit.foundation.rememberUi"]},{"name":"interface EventListener","description":"com.slack.circuit.foundation.EventListener","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/index.html","searchKeys":["EventListener","interface EventListener","com.slack.circuit.foundation.EventListener"]},{"name":"interface NonPausablePresenter<UiState : CircuitUiState> : Presenter<UiState> ","description":"com.slack.circuit.foundation.NonPausablePresenter","location":"circuit-foundation/com.slack.circuit.foundation/-non-pausable-presenter/index.html","searchKeys":["NonPausablePresenter","interface NonPausablePresenter<UiState : CircuitUiState> : Presenter<UiState> ","com.slack.circuit.foundation.NonPausablePresenter"]},{"name":"interface RecordLifecycle","description":"com.slack.circuit.foundation.RecordLifecycle","location":"circuit-foundation/com.slack.circuit.foundation/-record-lifecycle/index.html","searchKeys":["RecordLifecycle","interface RecordLifecycle","com.slack.circuit.foundation.RecordLifecycle"]},{"name":"object Companion","description":"com.slack.circuit.foundation.EventListener.Companion","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/-companion/index.html","searchKeys":["Companion","object Companion","com.slack.circuit.foundation.EventListener.Companion"]},{"name":"object DefaultDecoration : NavDecoration","description":"com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/-default-decoration/index.html","searchKeys":["DefaultDecoration","object DefaultDecoration : NavDecoration","com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration"]},{"name":"object EmptyDecoration : NavDecoration","description":"com.slack.circuit.foundation.NavigatorDefaults.EmptyDecoration","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/-empty-decoration/index.html","searchKeys":["EmptyDecoration","object EmptyDecoration : NavDecoration","com.slack.circuit.foundation.NavigatorDefaults.EmptyDecoration"]},{"name":"object NavigatorDefaults","description":"com.slack.circuit.foundation.NavigatorDefaults","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/index.html","searchKeys":["NavigatorDefaults","object NavigatorDefaults","com.slack.circuit.foundation.NavigatorDefaults"]},{"name":"open fun dispose()","description":"com.slack.circuit.foundation.EventListener.dispose","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/dispose.html","searchKeys":["dispose","open fun dispose()","com.slack.circuit.foundation.EventListener.dispose"]},{"name":"open fun onAfterCreatePresenter(screen: Screen, navigator: Navigator, presenter: Presenter<*>?, context: CircuitContext)","description":"com.slack.circuit.foundation.EventListener.onAfterCreatePresenter","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-after-create-presenter.html","searchKeys":["onAfterCreatePresenter","open fun onAfterCreatePresenter(screen: Screen, navigator: Navigator, presenter: Presenter<*>?, context: CircuitContext)","com.slack.circuit.foundation.EventListener.onAfterCreatePresenter"]},{"name":"open fun onAfterCreateUi(screen: Screen, ui: Ui<*>?, context: CircuitContext)","description":"com.slack.circuit.foundation.EventListener.onAfterCreateUi","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-after-create-ui.html","searchKeys":["onAfterCreateUi","open fun onAfterCreateUi(screen: Screen, ui: Ui<*>?, context: CircuitContext)","com.slack.circuit.foundation.EventListener.onAfterCreateUi"]},{"name":"open fun onBeforeCreatePresenter(screen: Screen, navigator: Navigator, context: CircuitContext)","description":"com.slack.circuit.foundation.EventListener.onBeforeCreatePresenter","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-before-create-presenter.html","searchKeys":["onBeforeCreatePresenter","open fun onBeforeCreatePresenter(screen: Screen, navigator: Navigator, context: CircuitContext)","com.slack.circuit.foundation.EventListener.onBeforeCreatePresenter"]},{"name":"open fun onBeforeCreateUi(screen: Screen, context: CircuitContext)","description":"com.slack.circuit.foundation.EventListener.onBeforeCreateUi","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-before-create-ui.html","searchKeys":["onBeforeCreateUi","open fun onBeforeCreateUi(screen: Screen, context: CircuitContext)","com.slack.circuit.foundation.EventListener.onBeforeCreateUi"]},{"name":"open fun onDisposeContent()","description":"com.slack.circuit.foundation.EventListener.onDisposeContent","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-dispose-content.html","searchKeys":["onDisposeContent","open fun onDisposeContent()","com.slack.circuit.foundation.EventListener.onDisposeContent"]},{"name":"open fun onDisposePresent()","description":"com.slack.circuit.foundation.EventListener.onDisposePresent","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-dispose-present.html","searchKeys":["onDisposePresent","open fun onDisposePresent()","com.slack.circuit.foundation.EventListener.onDisposePresent"]},{"name":"open fun onStartContent()","description":"com.slack.circuit.foundation.EventListener.onStartContent","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-start-content.html","searchKeys":["onStartContent","open fun onStartContent()","com.slack.circuit.foundation.EventListener.onStartContent"]},{"name":"open fun onStartPresent()","description":"com.slack.circuit.foundation.EventListener.onStartPresent","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-start-present.html","searchKeys":["onStartPresent","open fun onStartPresent()","com.slack.circuit.foundation.EventListener.onStartPresent"]},{"name":"open fun onState(state: CircuitUiState)","description":"com.slack.circuit.foundation.EventListener.onState","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-state.html","searchKeys":["onState","open fun onState(state: CircuitUiState)","com.slack.circuit.foundation.EventListener.onState"]},{"name":"open fun onUnavailableContent(screen: Screen, presenter: Presenter<*>?, ui: Ui<*>?, context: CircuitContext)","description":"com.slack.circuit.foundation.EventListener.onUnavailableContent","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/on-unavailable-content.html","searchKeys":["onUnavailableContent","open fun onUnavailableContent(screen: Screen, presenter: Presenter<*>?, ui: Ui<*>?, context: CircuitContext)","com.slack.circuit.foundation.EventListener.onUnavailableContent"]},{"name":"open fun start()","description":"com.slack.circuit.foundation.EventListener.start","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/start.html","searchKeys":["start","open fun start()","com.slack.circuit.foundation.EventListener.start"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.slack.circuit.foundation.RecordContentProvider.equals","location":"circuit-foundation/com.slack.circuit.foundation/-record-content-provider/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.slack.circuit.foundation.RecordContentProvider.equals"]},{"name":"open override fun <T> DecoratedContent(args: ImmutableList<T>, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","description":"com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration.DecoratedContent","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/-default-decoration/-decorated-content.html","searchKeys":["DecoratedContent","open override fun <T> DecoratedContent(args: ImmutableList<T>, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration.DecoratedContent"]},{"name":"open override fun <T> DecoratedContent(args: ImmutableList<T>, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","description":"com.slack.circuit.foundation.NavigatorDefaults.EmptyDecoration.DecoratedContent","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/-empty-decoration/-decorated-content.html","searchKeys":["DecoratedContent","open override fun <T> DecoratedContent(args: ImmutableList<T>, backStackDepth: Int, modifier: Modifier, content: (T) -> Unit)","com.slack.circuit.foundation.NavigatorDefaults.EmptyDecoration.DecoratedContent"]},{"name":"open override fun hashCode(): Int","description":"com.slack.circuit.foundation.RecordContentProvider.hashCode","location":"circuit-foundation/com.slack.circuit.foundation/-record-content-provider/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.slack.circuit.foundation.RecordContentProvider.hashCode"]},{"name":"open override fun toString(): String","description":"com.slack.circuit.foundation.RecordContentProvider.toString","location":"circuit-foundation/com.slack.circuit.foundation/-record-content-provider/to-string.html","searchKeys":["toString","open override fun toString(): String","com.slack.circuit.foundation.RecordContentProvider.toString"]},{"name":"sealed interface NavEvent : CircuitUiEvent","description":"com.slack.circuit.foundation.NavEvent","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/index.html","searchKeys":["NavEvent","sealed interface NavEvent : CircuitUiEvent","com.slack.circuit.foundation.NavEvent"]},{"name":"val LocalBackStack: ProvidableCompositionLocal<BackStack<out BackStack.Record>?>","description":"com.slack.circuit.foundation.LocalBackStack","location":"circuit-foundation/com.slack.circuit.foundation/-local-back-stack.html","searchKeys":["LocalBackStack","val LocalBackStack: ProvidableCompositionLocal<BackStack<out BackStack.Record>?>","com.slack.circuit.foundation.LocalBackStack"]},{"name":"val LocalCircuit: ProvidableCompositionLocal<Circuit?>","description":"com.slack.circuit.foundation.LocalCircuit","location":"circuit-foundation/com.slack.circuit.foundation/-local-circuit.html","searchKeys":["LocalCircuit","val LocalCircuit: ProvidableCompositionLocal<Circuit?>","com.slack.circuit.foundation.LocalCircuit"]},{"name":"val LocalRecordLifecycle: ProvidableCompositionLocal<RecordLifecycle>","description":"com.slack.circuit.foundation.LocalRecordLifecycle","location":"circuit-foundation/com.slack.circuit.foundation/-local-record-lifecycle.html","searchKeys":["LocalRecordLifecycle","val LocalRecordLifecycle: ProvidableCompositionLocal<RecordLifecycle>","com.slack.circuit.foundation.LocalRecordLifecycle"]},{"name":"val NONE: EventListener","description":"com.slack.circuit.foundation.EventListener.Companion.NONE","location":"circuit-foundation/com.slack.circuit.foundation/-event-listener/-companion/-n-o-n-e.html","searchKeys":["NONE","val NONE: EventListener","com.slack.circuit.foundation.EventListener.Companion.NONE"]},{"name":"val backward: ContentTransform","description":"com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration.backward","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/-default-decoration/backward.html","searchKeys":["backward","val backward: ContentTransform","com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration.backward"]},{"name":"val defaultNavDecoration: NavDecoration","description":"com.slack.circuit.foundation.Circuit.defaultNavDecoration","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/default-nav-decoration.html","searchKeys":["defaultNavDecoration","val defaultNavDecoration: NavDecoration","com.slack.circuit.foundation.Circuit.defaultNavDecoration"]},{"name":"val forward: ContentTransform","description":"com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration.forward","location":"circuit-foundation/com.slack.circuit.foundation/-navigator-defaults/-default-decoration/forward.html","searchKeys":["forward","val forward: ContentTransform","com.slack.circuit.foundation.NavigatorDefaults.DefaultDecoration.forward"]},{"name":"val newRoot: Screen","description":"com.slack.circuit.foundation.NavEvent.ResetRoot.newRoot","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-reset-root/new-root.html","searchKeys":["newRoot","val newRoot: Screen","com.slack.circuit.foundation.NavEvent.ResetRoot.newRoot"]},{"name":"val onUnavailableContent: (screen: Screen, modifier: Modifier) -> Unit","description":"com.slack.circuit.foundation.Circuit.onUnavailableContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/on-unavailable-content.html","searchKeys":["onUnavailableContent","val onUnavailableContent: (screen: Screen, modifier: Modifier) -> Unit","com.slack.circuit.foundation.Circuit.onUnavailableContent"]},{"name":"val presentWithLifecycle: Boolean","description":"com.slack.circuit.foundation.Circuit.presentWithLifecycle","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/present-with-lifecycle.html","searchKeys":["presentWithLifecycle","val presentWithLifecycle: Boolean","com.slack.circuit.foundation.Circuit.presentWithLifecycle"]},{"name":"val presenterFactories: MutableList<Presenter.Factory>","description":"com.slack.circuit.foundation.Circuit.Builder.presenterFactories","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/presenter-factories.html","searchKeys":["presenterFactories","val presenterFactories: MutableList<Presenter.Factory>","com.slack.circuit.foundation.Circuit.Builder.presenterFactories"]},{"name":"val record: R","description":"com.slack.circuit.foundation.RecordContentProvider.record","location":"circuit-foundation/com.slack.circuit.foundation/-record-content-provider/record.html","searchKeys":["record","val record: R","com.slack.circuit.foundation.RecordContentProvider.record"]},{"name":"val restoreState: Boolean","description":"com.slack.circuit.foundation.NavEvent.ResetRoot.restoreState","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-reset-root/restore-state.html","searchKeys":["restoreState","val restoreState: Boolean","com.slack.circuit.foundation.NavEvent.ResetRoot.restoreState"]},{"name":"val result: PopResult? = null","description":"com.slack.circuit.foundation.NavEvent.Pop.result","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-pop/result.html","searchKeys":["result","val result: PopResult? = null","com.slack.circuit.foundation.NavEvent.Pop.result"]},{"name":"val saveState: Boolean","description":"com.slack.circuit.foundation.NavEvent.ResetRoot.saveState","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-reset-root/save-state.html","searchKeys":["saveState","val saveState: Boolean","com.slack.circuit.foundation.NavEvent.ResetRoot.saveState"]},{"name":"val screen: Screen","description":"com.slack.circuit.foundation.NavEvent.GoTo.screen","location":"circuit-foundation/com.slack.circuit.foundation/-nav-event/-go-to/screen.html","searchKeys":["screen","val screen: Screen","com.slack.circuit.foundation.NavEvent.GoTo.screen"]},{"name":"val uiFactories: MutableList<Ui.Factory>","description":"com.slack.circuit.foundation.Circuit.Builder.uiFactories","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/ui-factories.html","searchKeys":["uiFactories","val uiFactories: MutableList<Ui.Factory>","com.slack.circuit.foundation.Circuit.Builder.uiFactories"]},{"name":"var CircuitContext.circuit: Circuit","description":"com.slack.circuit.foundation.circuit","location":"circuit-foundation/com.slack.circuit.foundation/circuit.html","searchKeys":["circuit","var CircuitContext.circuit: Circuit","com.slack.circuit.foundation.circuit"]},{"name":"var defaultNavDecoration: NavDecoration","description":"com.slack.circuit.foundation.Circuit.Builder.defaultNavDecoration","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/default-nav-decoration.html","searchKeys":["defaultNavDecoration","var defaultNavDecoration: NavDecoration","com.slack.circuit.foundation.Circuit.Builder.defaultNavDecoration"]},{"name":"var eventListenerFactory: EventListener.Factory?","description":"com.slack.circuit.foundation.Circuit.Builder.eventListenerFactory","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/event-listener-factory.html","searchKeys":["eventListenerFactory","var eventListenerFactory: EventListener.Factory?","com.slack.circuit.foundation.Circuit.Builder.eventListenerFactory"]},{"name":"var onUnavailableContent: (screen: Screen, modifier: Modifier) -> Unit","description":"com.slack.circuit.foundation.Circuit.Builder.onUnavailableContent","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/on-unavailable-content.html","searchKeys":["onUnavailableContent","var onUnavailableContent: (screen: Screen, modifier: Modifier) -> Unit","com.slack.circuit.foundation.Circuit.Builder.onUnavailableContent"]},{"name":"var presentWithLifecycle: Boolean","description":"com.slack.circuit.foundation.Circuit.Builder.presentWithLifecycle","location":"circuit-foundation/com.slack.circuit.foundation/-circuit/-builder/present-with-lifecycle.html","searchKeys":["presentWithLifecycle","var presentWithLifecycle: Boolean","com.slack.circuit.foundation.Circuit.Builder.presentWithLifecycle"]},{"name":"expect annotation class CircuitInject(val screen: KClass<out Screen>, val scope: KClass<*>)","description":"com.slack.circuit.codegen.annotations.CircuitInject","location":"circuit-codegen-annotations/com.slack.circuit.codegen.annotations/-circuit-inject/index.html","searchKeys":["CircuitInject","expect annotation class CircuitInject(val screen: KClass<out Screen>, val scope: KClass<*>)","com.slack.circuit.codegen.annotations.CircuitInject"]},{"name":"expect val scope: KClass<*>","description":"com.slack.circuit.codegen.annotations.CircuitInject.scope","location":"circuit-codegen-annotations/com.slack.circuit.codegen.annotations/-circuit-inject/scope.html","searchKeys":["scope","expect val scope: KClass<*>","com.slack.circuit.codegen.annotations.CircuitInject.scope"]},{"name":"expect val screen: KClass<out Screen>","description":"com.slack.circuit.codegen.annotations.CircuitInject.screen","location":"circuit-codegen-annotations/com.slack.circuit.codegen.annotations/-circuit-inject/screen.html","searchKeys":["screen","expect val screen: KClass<out Screen>","com.slack.circuit.codegen.annotations.CircuitInject.screen"]},{"name":"abstract fun goTo(screen: Screen): Boolean","description":"com.slack.circuit.runtime.GoToNavigator.goTo","location":"circuit-runtime/com.slack.circuit.runtime/-go-to-navigator/go-to.html","searchKeys":["goTo","abstract fun goTo(screen: Screen): Boolean","com.slack.circuit.runtime.GoToNavigator.goTo"]},{"name":"abstract fun peek(): Screen?","description":"com.slack.circuit.runtime.Navigator.peek","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/peek.html","searchKeys":["peek","abstract fun peek(): Screen?","com.slack.circuit.runtime.Navigator.peek"]},{"name":"abstract fun peekBackStack(): ImmutableList<Screen>","description":"com.slack.circuit.runtime.Navigator.peekBackStack","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/peek-back-stack.html","searchKeys":["peekBackStack","abstract fun peekBackStack(): ImmutableList<Screen>","com.slack.circuit.runtime.Navigator.peekBackStack"]},{"name":"abstract fun pop(result: PopResult? = null): Screen?","description":"com.slack.circuit.runtime.Navigator.pop","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/pop.html","searchKeys":["pop","abstract fun pop(result: PopResult? = null): Screen?","com.slack.circuit.runtime.Navigator.pop"]},{"name":"abstract fun resetRoot(newRoot: Screen, saveState: Boolean = false, restoreState: Boolean = false): ImmutableList<Screen>","description":"com.slack.circuit.runtime.Navigator.resetRoot","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/reset-root.html","searchKeys":["resetRoot","abstract fun resetRoot(newRoot: Screen, saveState: Boolean = false, restoreState: Boolean = false): ImmutableList<Screen>","com.slack.circuit.runtime.Navigator.resetRoot"]},{"name":"abstract override fun goTo(screen: Screen): Boolean","description":"com.slack.circuit.runtime.Navigator.goTo","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/go-to.html","searchKeys":["goTo","abstract override fun goTo(screen: Screen): Boolean","com.slack.circuit.runtime.Navigator.goTo"]},{"name":"annotation class InternalCircuitApi","description":"com.slack.circuit.runtime.InternalCircuitApi","location":"circuit-runtime/com.slack.circuit.runtime/-internal-circuit-api/index.html","searchKeys":["InternalCircuitApi","annotation class InternalCircuitApi","com.slack.circuit.runtime.InternalCircuitApi"]},{"name":"class CircuitContext constructor(val parent: CircuitContext?, tags: MutableMap<KClass<*>, Any> = mutableMapOf())","description":"com.slack.circuit.runtime.CircuitContext","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/index.html","searchKeys":["CircuitContext","class CircuitContext constructor(val parent: CircuitContext?, tags: MutableMap<KClass<*>, Any> = mutableMapOf())","com.slack.circuit.runtime.CircuitContext"]},{"name":"class StableCoroutineScope(scope: CoroutineScope) : CoroutineScope","description":"com.slack.circuit.runtime.internal.StableCoroutineScope","location":"circuit-runtime/com.slack.circuit.runtime.internal/-stable-coroutine-scope/index.html","searchKeys":["StableCoroutineScope","class StableCoroutineScope(scope: CoroutineScope) : CoroutineScope","com.slack.circuit.runtime.internal.StableCoroutineScope"]},{"name":"constructor(parent: CircuitContext?, tags: MutableMap<KClass<*>, Any> = mutableMapOf())","description":"com.slack.circuit.runtime.CircuitContext.CircuitContext","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/-circuit-context.html","searchKeys":["CircuitContext","constructor(parent: CircuitContext?, tags: MutableMap<KClass<*>, Any> = mutableMapOf())","com.slack.circuit.runtime.CircuitContext.CircuitContext"]},{"name":"constructor(scope: CoroutineScope)","description":"com.slack.circuit.runtime.internal.StableCoroutineScope.StableCoroutineScope","location":"circuit-runtime/com.slack.circuit.runtime.internal/-stable-coroutine-scope/-stable-coroutine-scope.html","searchKeys":["StableCoroutineScope","constructor(scope: CoroutineScope)","com.slack.circuit.runtime.internal.StableCoroutineScope.StableCoroutineScope"]},{"name":"fun <S : Any, T : S> putTag(type: KClass<S>, tag: T?)","description":"com.slack.circuit.runtime.CircuitContext.putTag","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/put-tag.html","searchKeys":["putTag","fun <S : Any, T : S> putTag(type: KClass<S>, tag: T?)","com.slack.circuit.runtime.CircuitContext.putTag"]},{"name":"fun <T : Any> tag(type: KClass<T>): T?","description":"com.slack.circuit.runtime.CircuitContext.tag","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/tag.html","searchKeys":["tag","fun <T : Any> tag(type: KClass<T>): T?","com.slack.circuit.runtime.CircuitContext.tag"]},{"name":"fun Navigator.popRoot(result: PopResult? = null)","description":"com.slack.circuit.runtime.popRoot","location":"circuit-runtime/com.slack.circuit.runtime/pop-root.html","searchKeys":["popRoot","fun Navigator.popRoot(result: PopResult? = null)","com.slack.circuit.runtime.popRoot"]},{"name":"fun Navigator.popUntil(predicate: (Screen) -> Boolean)","description":"com.slack.circuit.runtime.popUntil","location":"circuit-runtime/com.slack.circuit.runtime/pop-until.html","searchKeys":["popUntil","fun Navigator.popUntil(predicate: (Screen) -> Boolean)","com.slack.circuit.runtime.popUntil"]},{"name":"fun clearTags()","description":"com.slack.circuit.runtime.CircuitContext.clearTags","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/clear-tags.html","searchKeys":["clearTags","fun clearTags()","com.slack.circuit.runtime.CircuitContext.clearTags"]},{"name":"fun rememberStableCoroutineScope(): StableCoroutineScope","description":"com.slack.circuit.runtime.internal.rememberStableCoroutineScope","location":"circuit-runtime/com.slack.circuit.runtime.internal/remember-stable-coroutine-scope.html","searchKeys":["rememberStableCoroutineScope","fun rememberStableCoroutineScope(): StableCoroutineScope","com.slack.circuit.runtime.internal.rememberStableCoroutineScope"]},{"name":"inline fun <T : Any> putTag(tag: T?)","description":"com.slack.circuit.runtime.CircuitContext.putTag","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/put-tag.html","searchKeys":["putTag","inline fun <T : Any> putTag(tag: T?)","com.slack.circuit.runtime.CircuitContext.putTag"]},{"name":"inline fun <T : Any> tag(): T?","description":"com.slack.circuit.runtime.CircuitContext.tag","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/tag.html","searchKeys":["tag","inline fun <T : Any> tag(): T?","com.slack.circuit.runtime.CircuitContext.tag"]},{"name":"inline fun Navigator.resetRoot(newRoot: Screen, saveState: (currentRoot: Screen?) -> Boolean = { false }, restoreState: (currentRoot: Screen?) -> Boolean = { false }): List<Screen>","description":"com.slack.circuit.runtime.resetRoot","location":"circuit-runtime/com.slack.circuit.runtime/reset-root.html","searchKeys":["resetRoot","inline fun Navigator.resetRoot(newRoot: Screen, saveState: (currentRoot: Screen?) -> Boolean = { false }, restoreState: (currentRoot: Screen?) -> Boolean = { false }): List<Screen>","com.slack.circuit.runtime.resetRoot"]},{"name":"interface CircuitUiEvent","description":"com.slack.circuit.runtime.CircuitUiEvent","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-ui-event/index.html","searchKeys":["CircuitUiEvent","interface CircuitUiEvent","com.slack.circuit.runtime.CircuitUiEvent"]},{"name":"interface CircuitUiState","description":"com.slack.circuit.runtime.CircuitUiState","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-ui-state/index.html","searchKeys":["CircuitUiState","interface CircuitUiState","com.slack.circuit.runtime.CircuitUiState"]},{"name":"interface GoToNavigator","description":"com.slack.circuit.runtime.GoToNavigator","location":"circuit-runtime/com.slack.circuit.runtime/-go-to-navigator/index.html","searchKeys":["GoToNavigator","interface GoToNavigator","com.slack.circuit.runtime.GoToNavigator"]},{"name":"interface Navigator : GoToNavigator","description":"com.slack.circuit.runtime.Navigator","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/index.html","searchKeys":["Navigator","interface Navigator : GoToNavigator","com.slack.circuit.runtime.Navigator"]},{"name":"object Companion","description":"com.slack.circuit.runtime.CircuitContext.Companion","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/-companion/index.html","searchKeys":["Companion","object Companion","com.slack.circuit.runtime.CircuitContext.Companion"]},{"name":"object NoOp : Navigator","description":"com.slack.circuit.runtime.Navigator.NoOp","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/-no-op/index.html","searchKeys":["NoOp","object NoOp : Navigator","com.slack.circuit.runtime.Navigator.NoOp"]},{"name":"open override fun goTo(screen: Screen): Boolean","description":"com.slack.circuit.runtime.Navigator.NoOp.goTo","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/-no-op/go-to.html","searchKeys":["goTo","open override fun goTo(screen: Screen): Boolean","com.slack.circuit.runtime.Navigator.NoOp.goTo"]},{"name":"open override fun peek(): Screen?","description":"com.slack.circuit.runtime.Navigator.NoOp.peek","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/-no-op/peek.html","searchKeys":["peek","open override fun peek(): Screen?","com.slack.circuit.runtime.Navigator.NoOp.peek"]},{"name":"open override fun peekBackStack(): ImmutableList<Screen>","description":"com.slack.circuit.runtime.Navigator.NoOp.peekBackStack","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/-no-op/peek-back-stack.html","searchKeys":["peekBackStack","open override fun peekBackStack(): ImmutableList<Screen>","com.slack.circuit.runtime.Navigator.NoOp.peekBackStack"]},{"name":"open override fun pop(result: PopResult?): Screen?","description":"com.slack.circuit.runtime.Navigator.NoOp.pop","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/-no-op/pop.html","searchKeys":["pop","open override fun pop(result: PopResult?): Screen?","com.slack.circuit.runtime.Navigator.NoOp.pop"]},{"name":"open override fun resetRoot(newRoot: Screen, saveState: Boolean, restoreState: Boolean): ImmutableList<Screen>","description":"com.slack.circuit.runtime.Navigator.NoOp.resetRoot","location":"circuit-runtime/com.slack.circuit.runtime/-navigator/-no-op/reset-root.html","searchKeys":["resetRoot","open override fun resetRoot(newRoot: Screen, saveState: Boolean, restoreState: Boolean): ImmutableList<Screen>","com.slack.circuit.runtime.Navigator.NoOp.resetRoot"]},{"name":"val EMPTY: CircuitContext","description":"com.slack.circuit.runtime.CircuitContext.Companion.EMPTY","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: CircuitContext","com.slack.circuit.runtime.CircuitContext.Companion.EMPTY"]},{"name":"val parent: CircuitContext?","description":"com.slack.circuit.runtime.CircuitContext.parent","location":"circuit-runtime/com.slack.circuit.runtime/-circuit-context/parent.html","searchKeys":["parent","val parent: CircuitContext?","com.slack.circuit.runtime.CircuitContext.parent"]}]